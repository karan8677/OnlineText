module.exports=function(e){var r={};function t(n){if(r[n])return r[n].exports;var s=r[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,t),s.l=!0,s.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var s in e)t.d(n,s,function(r){return e[r]}.bind(null,s));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=15)}([function(e,r){e.exports=require("express")},function(e,r){e.exports=require("joi")},function(e,r){e.exports=require("redis")},function(e,r){e.exports=require("fs")},function(e,r){e.exports=require("mysql")},function(e,r){e.exports=require("jsonwebtoken")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("https")},function(e,r){e.exports=require("cors")},function(e,r){e.exports=require("morgan")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("cookie-parser")},function(e,r){e.exports=require("ws")},function(e,r){e.exports=require("dotenv")},function(e,r){e.exports=require("multer")},function(e,r,t){"use strict";t.r(r);var n=t(2),s=t.n(n),o=t(3),a=t.n(o),i=t(7),c=t.n(i),u=t(1),d=t.n(u);t(13).config();const g=d.a.object().keys({NODE_ENV:d.a.string().default("development").allow(["development","production"]),PORT:d.a.number().default(8080),MYSQL_PORT:d.a.number().default(3306),MYSQL_HOST:d.a.string().default("127.0.0.1"),MYSQL_USER:d.a.string(),MYSQL_PASS:d.a.string(),MYSQL_NAME:d.a.string(),VERSION:d.a.string()}).unknown().required(),{error:m,value:p}=d.a.validate(process.env,g);if(m)throw new Error("Config validation error: "+m.message);var l={version:p.VERSION,env:p.NODE_ENV,port:p.PORT,mysqlPort:p.MYSQL_PORT,mysqlHost:p.MYSQL_HOST,mysqlUserName:p.MYSQL_USER,mysqlPass:p.MYSQL_PASS,mysqlDatabase:p.MYSQL_DATABASE},h=t(0),I=t.n(h);const f=I.a.Router();f.get("/",(e,r)=>{r.render("Login")});var D=f;const N=I.a.Router();N.get("/",(e,r)=>{r.render("Register")});var v=N,S=t(5),O=t.n(S);var E=e=>new Promise((r,t)=>{O.a.verify(e,"thisismynewproject",(e,n)=>{e?(console.error("verify error:",e),t(e)):r(n)})}),y=(e,r)=>new Promise((t,n)=>{const s=O.a.sign({_id:e.toString()},"thisismynewproject",{expiresIn:"1 day"});r.cookie("token",s,{maxAge:1e6,httpOnly:!0,secure:!1}),t("CookieSet")});var U=(e,r)=>{const t=e.cookies.token;E(t).then(e=>{r.render("TestPage")}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})};const G=I.a.Router();G.get("/",(e,r)=>{U(e,r)});var M=G;const L=I.a.Router();L.get("/",(e,r)=>{r.render("Verification")});var P=L,R=t(4),F=t.n(R);const T=F.a.createPool({connection:10,host:l.mysqlHost,user:l.mysqlUserName,password:l.mysqlPass,database:l.mysqlDatabase});var b=e=>new Promise((r,t)=>{T.getConnection((n,s)=>{n?t(n):(s.query(e,(function(e,n){e?(console.error("SQL error:",e),t(e)):r(n)})),s.release())})});var w={createGroup:(e,r)=>new Promise((t,n)=>{var s=new Date,o=s.getFullYear()+"-"+(s.getMonth()+1)+"-"+s.getDate(),a=s.getHours()+":"+s.getMinutes()+":"+s.getSeconds();b("INSERT INTO GroupList(GroupName, Time, MemberNum, OwnID) VALUES('"+e+"','"+(o+" "+a)+"','1','"+r+"')").then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),deleteGroup:e=>new Promise((r,t)=>{var n="DELETE FROM Member WHERE GroupID = "+e;b(n).then(r=>b(n="DELETE FROM GroupList WHERE GroupID = "+e)).then(e=>{r(e)}).catch(e=>{console.error("SQL error:",e),t(e)})}),getCertainGroupID:(e,r)=>new Promise((t,n)=>{b("SELECT GroupID FROM GroupList WHERE GroupName = '"+e+"' AND OwnID = "+r+" ORDER BY GroupID DESC limit 1").then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),deleteMember:(e,r)=>new Promise((t,n)=>{b("DELETE FROM Member WHERE GroupID = "+e+" AND UserID = "+r).then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),addMember:(e,r)=>new Promise((t,n)=>{b("INSERT INTO Member(GroupID, UserID) VALUES('"+e+"','"+r+"')").then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),getCertainMember:(e,r)=>new Promise((t,n)=>{b("SELECT MemberID FROM Member WHERE UserID = "+e+" AND GroupID = "+r).then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),getGroupID:e=>new Promise((r,t)=>{b("SELECT GroupID FROM GroupList WHERE GroupName = '"+e+"'").then(e=>{r(e)}).catch(e=>{console.error("SQL error:",e),t(e)})})};var A={getUserGroup:e=>new Promise((r,t)=>{b("SELECT GroupList.GroupID, GroupList.GroupName FROM Member INNER JOIN GroupList ON GroupList.GroupID = Member.GroupID WHERE Member.UserID = "+e).then(e=>{r(e)}).catch(e=>{console.error("SQL error:",e),t(e)})}),getUserFriend:e=>new Promise((r,t)=>{b("SELECT Account.UserAccount FROM Account INNER JOIN FriendList ON FriendList.UserID2 = Account.UserID WHERE FriendList.UserID1 = "+e+" UNION SELECT Account.UserAccount FROM Account INNER JOIN FriendList ON FriendList.UserID1 = Account.UserID WHERE FriendList.UserID2 = "+e).then(e=>{r(e)}).catch(e=>{console.error("SQL error:",e),t(e)})}),getUserID:e=>new Promise((r,t)=>{b("SELECT UserID FROM Account WHERE UserAccount = '"+e+"'").then(e=>{r(e)}).catch(e=>{console.error("SQL error:",e),t(e)})}),getUserData:e=>new Promise((r,t)=>{b("SELECT UserID, UserAccount FROM Account WHERE UserAccount = '"+e+"'").then(e=>{r(e)}).catch(e=>{console.error("SQL error:",e),t(e)})})};var J=(e,r)=>{const t=e.cookies.token;var n=0;E(t).then(e=>A.getUserID(e._id)).then(t=>{if(1===t.length)return n=t[0].UserID,w.createGroup(e.params.groupName,t[0].UserID);var s={messageName:"createGroup",data:"you are not in the database"};return r.send(JSON.stringify(s)),Promise.reject(0)}).then(r=>w.getCertainGroupID(e.params.groupName,n)).then(e=>w.addMember(e[0].GroupID,n)).then(e=>{var t={messageName:"createGroup",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})},k=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(t=>{if(1===t.length)return w.deleteGroup(e.params.groupID);var n={messageName:"deleteGroup",data:"you are not in the database"};return r.send(JSON.stringify(n)),Promise.reject(0)}).then(e=>{var t={messageName:"deleteGroup",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})};const x=(e,r)=>new Promise((t,n)=>{b("SELECT FriendInviteID FROM FriendInvite WHERE ToUserID = "+e+" AND FromUserID = "+r+" OR( ToUserID = "+r+" AND FromUserID = "+e+")").then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),j=(e,r)=>new Promise((t,n)=>{b("SELECT GroupInviteID FROM GroupInvite WHERE UserID = "+e+" AND GroupID = "+r).then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})});var _={getFriendInvite:e=>new Promise((r,t)=>{b("SELECT Account.UserAccount ,Account.UserID FROM Account INNER JOIN FriendInvite ON FriendInvite.FromUserID = Account.UserID WHERE FriendInvite.ToUserID ="+e).then(e=>{r(e)}).catch(e=>{console.error("SQL error:",e),t(e)})}),deleteFriendInvite:(e,r)=>new Promise((t,n)=>{b("DELETE FROM FriendInvite WHERE ToUserID = "+e+" AND FromUserID = "+r).then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),postFriendInvite:(e,r)=>new Promise((t,n)=>{A.getCertainFriend(e,r).then(t=>0===t.length?x(e,r):(n("already friend"),Promise.reject(0))).then(t=>0===t.length?b("INSERT INTO FriendInvite(ToUserID, FromUserID) VALUES('"+e+"','"+r+"') "):(n("already invite"),Promise.reject(0))).then(e=>{t(e)}).catch(e=>{0!==e&&(console.error("SQL error:",e),n(e))})}),getCertainFriendInvite:x,getGroupInvite:e=>new Promise((r,t)=>{b("SELECT GroupList.GroupName, GroupList.GroupID FROM GroupList INNER JOIN GroupInvite ON GroupInvite.GroupID = GroupList.GroupID WHERE GroupInvite.UserID = "+e).then(e=>{r(e)}).catch(e=>{console.error("SQL error:",e),t(e)})}),deleteGroupInvite:(e,r)=>new Promise((t,n)=>{b("DELETE FROM GroupInvite WHERE UserID = "+e+" AND GroupID = "+r).then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),postGroupInvite:(e,r)=>new Promise((t,n)=>{w.getCertainMember(e,r).then(t=>0===t.length?j(e,r):(n("already member"),Promise.reject(0))).then(t=>0===t.length?b("INSERT INTO GroupInvite(UserID, GroupID) VALUES('"+e+"','"+r+"') "):(n("already invite"),Promise.reject(0))).then(e=>{t(e)}).catch(e=>{0!==e&&(console.error("SQL error:",e),n(e))})}),getCertainGroupInvite:j};var Q=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(e=>{if(1===e.length)return _.getFriendInvite(e[0].UserID);var t={messageName:"getFriendInvite",data:"you are not in the database"};return r.send(JSON.stringify(t)),Promise.reject(0)}).then(e=>{var t={messageName:"getFriendInvite"};t.data=e,r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})},C=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(t=>1===t.length?_.deleteFriendInvite(t[0].UserID,e.params.userID):(jsonpackage.messageName="deleteFriendInvite",jsonpackage.data="you are not in the database",r.send(JSON.stringify(jsonpackage)),reject(0))).then(e=>{var t={messageName:"deleteFriendInvite",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})},q=(e,r)=>{const t=e.cookies.token;E(t).then(r=>Promise.all([A.getUserID(r._id),A.getUserID(e.params.userName)])).then(e=>{if(1===e[0].length&&1===e[1].length)return _.postFriendInvite(e[1][0].UserID,e[0][0].UserID);var t={messageName:"postFriendInvite",data:"you are not in the database"};return r.send(JSON.stringify(t)),reject(0)}).then(e=>{var t={messageName:"postFriendInvite",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{if("already friend"===e||"already invite"===e){var t={messageName:"postFriendInvite"};t.data=e,r.send(JSON.stringify(t))}else r.redirect("https://127.0.0.1:3000/OnlineText/login")})},H=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(e=>{if(1===e.length)return _.getGroupInvite(e[0].UserID);var t={messageName:"getGroupInvite",data:"you are not in the database"};return r.send(JSON.stringify(t)),reject(0)}).then(e=>{var t={messageName:"getGroupInvite"};t.data=e,r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})},W=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(t=>1===t.length?_.deleteGroupInvite(t[0].UserID,e.params.groupID):(jsonpackage.messageName="deleteGroupInvite",jsonpackage.data="you are not in the database",r.send(JSON.stringify(jsonpackage)),reject(0))).then(e=>{var t={messageName:"deleteGroupInvite",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})},Y=(e,r)=>{const t=e.cookies.token;E(t).then(r=>Promise.all([A.getUserID(r._id),A.getUserID(e.params.userName)])).then(t=>{if(1===t[0].length&&1===t[1].length)return _.postGroupInvite(t[1][0].UserID,e.params.groupID);var n={messageName:"postGroupInvite",data:"you are not in the database"};return r.send(JSON.stringify(n)),reject(0)}).then(e=>{var t={messageName:"postGroupInvite",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{if("already member"===e||"already invite"===e){var t={messageName:"postGroupInvite"};t.data=e,r.send(JSON.stringify(t))}else r.redirect("https://127.0.0.1:3000/OnlineText/login")})};var V=(e,r)=>new Promise((t,n)=>{b("INSERT INTO FriendList(UserID1, UserID2) VALUES("+e+","+r+")").then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})}),B=(e,r)=>new Promise((t,n)=>{b("DELETE FROM FriendList WHERE (UserID1 = "+e+" AND UserID2 = "+r+") OR (UserID1 = "+r+" AND UserID2 = "+e+")").then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})});var z=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(e=>{if(1===e.length)return A.getUserGroup(e[0].UserID);var t={messageName:"getGroup",data:"you are not in the database"};return r.send(JSON.stringify(t)),reject(0)}).then(e=>{var t={messageName:"getGroup"};t.data=e,r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})},$=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(e=>{if(1===e.length)return A.getUserFriend(e[0].UserID);var t={messageName:"getFriend",data:"you are not in the database"};return r.send(JSON.stringify(t)),reject(0)}).then(e=>{var t={messageName:"getFriend"};t.data=e,r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})},K=(e,r)=>{const t=e.cookies.token;var n=0;E(t).then(e=>A.getUserID(e._id)).then(t=>{if(1===t.length)return n=t[0].UserID,w.getCertainMember(n,e.params.groupID);var s={messageName:"addGroup",data:"you are not in the database"};return r.send(JSON.stringify(s)),Promise.reject(1)}).then(t=>{if(0===t.length)return _.getCertainGroupInvite(n,e.params.groupID);var s={messageName:"addGroup",data:"already member"};return r.send(JSON.stringify(s)),Promise.reject(0)}).then(t=>{if(1===t.length)return w.addMember(e.params.groupID,n);var s={messageName:"addGroup",data:"not invited"};return r.send(JSON.stringify(s)),Promise.reject(0)}).then(r=>_.deleteGroupInvite(n,e.params.groupID)).then(e=>{var t={messageName:"addGroup",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{0!==e&&r.redirect("https://127.0.0.1:3000/OnlineText/login")})},X=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(t=>{if(1===t.length)return w.deleteMember(e.params.groupID,t[0].UserID);var n={messageName:"deleteMember",data:"you are not in the database"};return r.send(JSON.stringify(n)),Promise.reject(1)}).then(e=>{var t={messageName:"deleteMember",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{0!==e&&r.redirect("https://127.0.0.1:3000/OnlineText/login")})},Z=(e,r)=>{const t=e.cookies.token;var n=0;E(t).then(e=>A.getUserID(e._id)).then(t=>{if(1===t.length)return n=t[0].UserID,A.getCertainFriend(n,e.params.userID);var s={messageName:"addFriend",data:"you are not in the database"};return r.send(JSON.stringify(s)),Promise.reject(1)}).then(t=>{if(0===t.length)return _.getCertainFriendInvite(n,e.params.userID);var s={messageName:"addFriend",data:"already friend"};return r.send(JSON.stringify(s)),Promise.reject(0)}).then(t=>{if(1===t.length)return V(n,e.params.userID);var s={messageName:"addFriend",data:"not invited"};return r.send(JSON.stringify(s)),Promise.reject(0)}).then(r=>_.deleteFriendInvite(n,e.params.userID)).then(e=>{var t={messageName:"addFriend",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{0!==e&&r.redirect("https://127.0.0.1:3000/OnlineText/login")})},ee=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserID(e._id)).then(t=>{if(1===t.length)return B(t[0].UserID,e.params.userID);var n={messageName:"deleteFriend",data:"you are not in the database"};return r.send(JSON.stringify(n)),Promise.reject(1)}).then(e=>{var t={messageName:"deleteFriend",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{0!==e&&r.redirect("https://127.0.0.1:3000/OnlineText/login")})},re=(e,r)=>{const t=e.cookies.token;E(t).then(e=>A.getUserData(e._id)).then(e=>{var t={};if(1!==e.length)return t.messageName="userData",t.data="you are not in the database",r.send(JSON.stringify(t)),reject(0);t.messageName="userData",t.data=e,r.send(JSON.stringify(t))}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})};var te=(e,r)=>new Promise((t,n)=>{b("Select UserPassword From Account Where UserAccount = '"+e+"'").then(e=>{0==e.length?t("account not found"):e[0].UserPassword===r?t("success"):t("password incorrect")}).catch(e=>{e&&(console.error("SQL error:",e),n(e))})});var ne=(e,r)=>{te(e.params.userAccount,e.params.userPassword).then(t=>{if("success"===t)return y(e.params.userAccount,r);var n={messageName:"login"};return n.data=t,r.send(JSON.stringify(n)),Promise.reject(0)}).then(e=>{var t={messageName:"login",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{if(0!==e){var t={messageName:"error"};t.data=e,r.send(JSON.stringify(t))}})};var se=(e,r)=>new Promise((t,n)=>{b("INSERT INTO Account(UserAccount, UserPassword) VALUES('"+e+"','"+r+"')").then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),n(e)})});var oe=(e,r)=>{te(e.params.userAccount,e.params.userPassword).then(t=>{if("account not found"===t)return se(e.params.userAccount,e.params.userPassword);if("success"===t||"password incorrect"===t){var n={messageName:"register",data:"account exist"};return r.send(JSON.stringify(n)),Promise.reject(0)}}).then(e=>{var t={messageName:"register",data:"success"};r.send(JSON.stringify(t))}).catch(e=>{if(0!==e){var t={messageName:"error"};t.data=e,r.send(JSON.stringify(t))}})};F.a.createPool({connection:10,host:l.mysqlHost,user:l.mysqlUserName,password:l.mysqlPass,database:l.mysqlDatabase});var ae=(e,r,t)=>new Promise((n,s)=>{var o=new Date,a=o.getFullYear()+"-"+(o.getMonth()+1)+"-"+o.getDate(),i=o.getHours()+":"+o.getMinutes()+":"+o.getSeconds();b("INSERT INTO GroupMessage(GroupID, FromUserID, Message, Time) VALUES('"+e+"','"+r+"','"+t+"','"+(a+" "+i)+"')").then(e=>{n(e)}).catch(e=>{console.error("SQL error:",e),s(e)})}),ie=e=>new Promise((r,t)=>{connectionPool.getConnection((n,s)=>{if(n)t(n);else{var o="SELECT Account.UserAccount, GroupMessage.Message, GroupMessage.Time FROM GroupMessage INNER JOIN Account ON Account.UserID = GroupMessage.FromUserID WHERE GroupMessage.GroupID = "+e+" ORDER BY GroupMessage.MessageID limit 50";s.query(o,(function(e,n){e?(console.error("SQL error:",e),t(e)):r(n)})),s.release()}})});var ce={getGroupMember:e=>new Promise((r,t)=>{w.getGroupMember(e).then(e=>{r(e)}).catch(e=>{t(e)})}),saveGroupMessage:e=>new Promise((r,t)=>{ae(e.groupID,e.fromUserID,e.message).then(e=>{r(e)}).catch(e=>{t(e)})}),getOldGroupMessage:(e,r)=>{const t=s.a.createClient();t.on("connect",()=>{console.log("Redis client connected")}),t.LRANGE(e.params.groupID+"_groupMessage",0,50,(n,s)=>{if(0!=s.length){var o={messageName:"getOldGroupMessage"};for(let e=0;e<s.length;e++)s[e]=JSON.parse(s[e]);o.data=s,t.expire(e.params.groupID+"_groupMessage",1e3),r.send(JSON.stringify(o))}else ie(e.params.groupID).then(n=>{var s={messageName:"getOldGroupMessage"};s.data=n;for(var o=0;o<s.data.length;o++)t.RPUSH(e.params.groupID+"_groupMessage",JSON.stringify(s.data[o]));t.expire(e.params.groupID+"_groupMessage",1e3),r.send(JSON.stringify(s))}).catch(e=>{reject(e)});if(n)throw console.log(n),n})},saveFriendMessage:e=>new Promise((r,t)=>{ae(e.friendID,e.fromUserID,e.message).then(e=>{r(e)}).catch(e=>{t(e)})}),getOldFriendMessage:(e,r)=>{const t=s.a.createClient();t.on("connect",()=>{console.log("Redis client connected")}),t.LRANGE(r.params.friendID+"_friendMessage",0,50,(e,n)=>{if(0!=n.length){var s={messageName:"getOldFriendMessage"};for(let e=0;e<n.length;e++)n[e]=JSON.parse(n[e]);s.data=n,t.expire(friendID+"_friendMessage",1e3),r.send(JSON.stringify(s))}else ie(r.params.friendID).then(e=>{var n={messageName:"getOldGroupMessage"};n.data=e;for(var s=0;s<n.data.length;s++)t.RPUSH(r.params.friendID+"_friendMessage",JSON.stringify(n.data[s]));t.expire(r.params.friendID+"_friendMessage",1e3),r.send(JSON.stringify(n))}).catch(e=>{reject(e)});if(e)throw console.log(e),e})}};t(14);const ue=I.a.Router();ue.get("/login/:userAccount/:userPassword",(function(e,r){ne(e,r)})),ue.post("/register/:userAccount/:userPassword",(function(e,r){oe(e,r)})),ue.get("/userData",(function(e,r){re(e,r)})),ue.post("/createGroup/:groupName",(function(e,r){J(e,r)})),ue.delete("/deleteGroup/:groupID",(function(e,r){k(e,r)})),ue.get("/group",(function(e,r){z(e,r)})),ue.post("/group/:groupID",(function(e,r){K(e,r)})),ue.delete("/group/:groupID",(function(e,r){X(e,r)})),ue.get("/groupInvite",(function(e,r){H(e,r)})),ue.post("/groupInvite/:userName/:groupID",(function(e,r){Y(e,r)})),ue.delete("/groupInvite/:groupID",(function(e,r){W(e,r)})),ue.get("/friend",(function(e,r){$(e,r)})),ue.post("/friend/:userID",(function(e,r){Z(e,r)})),ue.delete("/friend/:userID",(function(e,r){ee(e,r)})),ue.get("/friendInvite",(function(e,r){Q(e,r)})),ue.post("/friendInvite/:userName",(function(e,r){q(e,r)})),ue.delete("/friendInvite/:userID",(function(e,r){C(e,r)})),ue.get("/oldMessage/:groupID",(function(e,r){})),ue.get("/friendOldMessage/:userID",(function(e,r){}));var de=ue;const ge=I.a.Router();ge.get("/",(e,r)=>{r.render("ErrorPage")});var me=ge;const pe=I.a.Router();pe.use("/login",D),pe.use("/register",v),pe.use("/mainPage",M),pe.use("/verification",P),pe.use("/file",de),pe.use("/error",me);var le=pe,he=t(6),Ie=t.n(he),fe=t(8),De=t.n(fe),Ne=t(9),ve=t.n(Ne),Se=t(10),Oe=t.n(Se),Ee=t(11),ye=t.n(Ee);const Ue=I()();Ue.use(Ie.a.json()),Ue.use(Ie.a.urlencoded({extended:!0})),Ue.use(ye()()),Ue.use(De()()),Ue.use(ve()("dev")),Ue.set("views","./views"),Ue.set("view engine","jade"),Ue.upload=function(e,r){console.log(e.body)},Ue.use("/OnlineText",le),Ue.use(I.a.static(Oe.a.join("C:/OnlineText/","public"))),Ue.use((function(e,r){r.status(404).render("404Page")}));var Ge=Ue,Me=t(12),Le=t.n(Me),Pe=[];const Re={key:a.a.readFileSync("key.pem"),cert:a.a.readFileSync("cert.pem")},Fe=c.a.createServer(Re,Ge),Te=new Le.a.Server({server:Fe,verifyClient:function(e,r){var t=e.req.headers.cookie,n={};t?(t.split(";").forEach((function(e){var r=e.split("=");n[r.shift().trim()]=decodeURI(r.join("="))})),E(n.token).then(e=>{r(!0)}).catch(e=>{console.log(e),r(!1,401,"Unauthorized")})):r(!1,401,"Unauthorized")}});Te.on("connection",e=>{Pe.push(e),e.on("message",r=>{var t=JSON.parse(r);switch(t.messageName){case"userAccount":A.getUserID(t.data).then(r=>{e.account=t.data,e.id=r.UserID}).catch(e=>{res.send(e)});break;case"groupMessage":t.data.fromUserID=e.id,t.data.fromUserAccount=e.account,ce.saveMessage(t.data).then(e=>ce.getMember(t.data.groupName)).then(e=>{const r=s.a.createClient();r.on("connect",()=>{console.log("Redis client connected")});let n={};n.UserAccount=t.data.fromUserAccount,n.Message=t.data.message,r.RPUSH(t.data.groupID+"_groupMessage",JSON.stringify(n)),r.expire(t.data.groupID+"_groupMessage",1e3);for(var o=0;o<Pe.length;o++)e.some(e=>e.UserID===Pe[o].id)&&Pe[o].send(JSON.stringify(t))}).catch(e=>{console.log(e)})}}),e.on("close",()=>{console.log("Close connected");const r=Pe.indexOf(e);r>-1&&Pe.splice(r,1)})}),Fe.listen(l.port,()=>{console.log(`server started on port https://127.0.\n    0.1:${l.port} (${l.env})`)});r.default={app:Ge,wss:Te}}]);
//# sourceMappingURL=index.bundle.js.map