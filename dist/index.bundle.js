module.exports=function(e){var r={};function a(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,a),o.l=!0,o.exports}return a.m=e,a.c=r,a.d=function(e,r,t){a.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,r){if(1&r&&(e=a(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)a.d(t,o,function(r){return e[r]}.bind(null,o));return t},a.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(r,"a",r),r},a.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},a.p="",a(a.s=15)}([function(e,r){e.exports=require("express")},function(e,r){e.exports=require("joi")},function(e,r){e.exports=require("redis")},function(e,r){e.exports=require("fs")},function(e,r){e.exports=require("mysql")},function(e,r){e.exports=require("jsonwebtoken")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("https")},function(e,r){e.exports=require("cors")},function(e,r){e.exports=require("morgan")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("cookie-parser")},function(e,r){e.exports=require("ws")},function(e,r){e.exports=require("dotenv")},function(e,r){e.exports=require("multer")},function(e,r,a){"use strict";a.r(r);var t=a(2),o=a.n(t),s=a(3),n=a.n(s),i=a(7),c=a.n(i),u=a(1),d=a.n(u);a(13).config();const l=d.a.object().keys({NODE_ENV:d.a.string().default("development").allow(["development","production"]),PORT:d.a.number().default(8080),MYSQL_PORT:d.a.number().default(3306),MYSQL_HOST:d.a.string().default("127.0.0.1"),MYSQL_USER:d.a.string(),MYSQL_PASS:d.a.string(),MYSQL_NAME:d.a.string(),VERSION:d.a.string()}).unknown().required(),{error:g,value:m}=d.a.validate(process.env,l);if(g)throw new Error("Config validation error: "+g.message);var p={version:m.VERSION,env:m.NODE_ENV,port:m.PORT,mysqlPort:m.MYSQL_PORT,mysqlHost:m.MYSQL_HOST,mysqlUserName:m.MYSQL_USER,mysqlPass:m.MYSQL_PASS,mysqlDatabase:m.MYSQL_DATABASE},I=a(0),f=a.n(I);const D=f.a.Router();D.get("/",(e,r)=>{r.render("Login")});var h=D;const w=f.a.Router();w.get("/",(e,r)=>{r.render("Register")});var E=w,N=a(5),v=a.n(N);var U=e=>new Promise((r,a)=>{v.a.verify(e,"thisismynewproject",(e,t)=>{e?(console.error("jwtVerify error:",e),a(e)):r(t)})}),S=(e,r)=>new Promise((a,t)=>{try{const t=v.a.sign({_id:e.toString()},"thisismynewproject",{expiresIn:"1 day"});r.cookie("token",t,{maxAge:1e7,httpOnly:!0,secure:!1}),a("CookieSet")}catch(e){console.error("jwtSetCookie error:",e),t(e)}});var y=(e,r)=>{const a=e.cookies.token;U(a).then(e=>{r.render("TestPage")}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})};const O=f.a.Router();O.get("/",(e,r)=>{y(e,r)});var A=O;const M=f.a.Router();M.get("/",(e,r)=>{r.render("Verification")});var R=M,G=a(4),P=a.n(G);const b=P.a.createPool({connection:10,host:p.mysqlHost,user:p.mysqlUserName,password:p.mysqlPass,database:p.mysqlDatabase});var F=e=>new Promise((r,a)=>{b.getConnection((t,o)=>{t?a(t):(o.query(e,(function(e,t){e?(console.error("SQL error:",e),a(e)):r(t)})),o.release())})});var L=e=>new Promise((r,a)=>{F("SELECT UserID FROM Account WHERE UserAccount = '"+e+"'").then(e=>{r(e)}).catch(e=>{console.error("getUserID error:",e),a(e)})}),T=e=>new Promise((r,a)=>{F("SELECT UserID AS userName , UserAccount AS userID FROM Account WHERE UserAccount = '"+e+"'").then(e=>{r(e)}).catch(e=>{console.error("getUserData error:",e),a(e)})});var k={getUserGroup:e=>new Promise((r,a)=>{F("SELECT GroupList.GroupID AS groupID, GroupList.GroupName AS groupName FROM Member INNER JOIN GroupList ON GroupList.GroupID = Member.GroupID WHERE Member.UserID = "+e).then(e=>{r(e)}).catch(e=>{console.error("getUserGroup error:",e),a(e)})}),getGroup:(e,r,a)=>new Promise((t,o)=>{var s="SELECT * FROM GroupList WHERE GroupName = '"+e+"' AND OwnID = "+r+" ORDER BY GroupID DESC ";"all"!==a&&(s+="limit "+a),F(s).then(e=>{t(e)}).catch(e=>{console.error("getGroup error:",e),o(e)})}),createGroup:(e,r)=>new Promise((a,t)=>{var o=new Date,s=o.getFullYear()+"-"+(o.getMonth()+1)+"-"+o.getDate(),n=o.getHours()+":"+o.getMinutes()+":"+o.getSeconds();F("INSERT INTO GroupList(GroupName, Time, MemberNum, OwnID) VALUES('"+e+"','"+(s+" "+n)+"','1','"+r+"')").then(e=>{a(e)}).catch(e=>{console.error("createGroup error:",e),t(e)})}),deleteGroup:e=>new Promise((r,a)=>{F("DELETE FROM GroupList WHERE GroupID = "+e).then(e=>{r(e)}).catch(e=>{console.error("deleteGroup error:",e),a(e)})}),getMember:(e,r)=>new Promise((a,t)=>{var o="SELECT * FROM Member";F(o+="all"===e?" WHERE GroupID = "+r:"all"===r?" WHERE UserID = "+e:" WHERE UserID = "+e+" AND GroupID = "+r).then(e=>{a(e)}).catch(e=>{console.error("getMember error:",e),t(e)})}),addMember:(e,r)=>new Promise((a,t)=>{F("INSERT INTO Member(GroupID, UserID) VALUES('"+e+"','"+r+"')").then(e=>{a(e)}).catch(e=>{console.error("addMember error:",e),t(e)})}),deleteMember:(e,r)=>new Promise((a,t)=>{var o="DELETE FROM Member ";F(o+="all"===e?"WHERE UserID = "+r:"all"===r?"WHERE GroupID = "+e:"WHERE GroupID = "+e+" AND UserID = "+r).then(e=>{a(e)}).catch(e=>{console.error("deleteMember error:",e),t(e)})})};var _=e=>new Promise((r,a)=>{F("SELECT Account.UserAccount AS userName ,Account.UserID AS userID FROM Account INNER JOIN FriendInvite ON FriendInvite.FromUserID = Account.UserID WHERE FriendInvite.ToUserID ="+e).then(e=>{r(e)}).catch(e=>{console.error("getFriendInvite error:",e),a(e)})}),H=(e,r)=>new Promise((a,t)=>{var o="SELECT * FROM FriendInvite ";F(o+="all"===e?"WHERE FromUserID = "+r:"all"===r?"WHERE ToUserID = "+e:"WHERE ToUserID = "+e+" AND FromUserID = "+r).then(e=>{a(e)}).catch(e=>{console.error("getFriendInvite error:",e),t(e)})}),x=(e,r)=>new Promise((a,t)=>{var o="DELETE FROM FriendInvite ";F(o+="all"===e?"WHERE FromUserID = "+r:"all"===r?"WHERE ToUserID = "+e:"WHERE ToUserID = "+e+" AND FromUserID = "+r).then(e=>{a(e)}).catch(e=>{console.error("deleteFriendInvite error:",e),t(e)})}),J=(e,r)=>new Promise((a,t)=>{F("INSERT INTO FriendInvite(ToUserID, FromUserID) VALUES('"+e+"','"+r+"') ").then(e=>{a(e)}).catch(e=>{console.error("postFriendInvite error:",e),t(e)})}),q=e=>new Promise((r,a)=>{F("SELECT GroupList.GroupName AS groupName, GroupList.GroupID AS groupID FROM GroupList INNER JOIN GroupInvite ON GroupInvite.GroupID = GroupList.GroupID WHERE GroupInvite.UserID = "+e).then(e=>{r(e)}).catch(e=>{console.error("getUserGroupInvite error:",e),a(e)})}),W=(e,r)=>new Promise((a,t)=>{var o="SELECT * FROM GroupInvite ";F(o+="all"===e?"WHERE GroupID = "+r:"all"===r?"WHERE UserID = "+e:"WHERE UserID = "+e+" AND GroupID = "+r).then(e=>{a(e)}).catch(e=>{console.error("getGroupInvite error:",e),t(e)})}),C=(e,r)=>new Promise((a,t)=>{var o="DELETE FROM GroupInvite WHERE ";F(o+="all"===e?"GroupID = "+r:"all"===r?"UserID = "+e:"UserID = "+e+" AND GroupID = "+r).then(e=>{a(e)}).catch(e=>{console.error("deleteGroupInvite error:",e),t(e)})}),j=(e,r)=>new Promise((a,t)=>{F("INSERT INTO GroupInvite(UserID, GroupID) VALUES('"+e+"','"+r+"') ").then(e=>{a(e)}).catch(e=>{console.error("postGroupInvite error:",e),t(e)})});var Y=async(e,r)=>{var a={messageName:"getGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;const s=await k.getUserGroup(o[0].UserID);a.data=s}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},Q=async(e,r)=>{var a={messageName:"createGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;await k.createGroup(e.params.groupName,o[0].UserID);const s=await k.getGroup(e.params.groupName,o[0].UserID,1);if(1!==s.length)throw new Error;await k.addMember(s[0].GroupID,o[0].UserID);a.data="success"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},V=async(e,r)=>{var a={messageName:"deleteGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r);if(1!==(await L(t._id)).length)throw new Error;await Promise.all([k.deleteMember(e.params.groupID,"all"),C("all",e.params.groupID)]),await k.deleteGroup(e.params.groupID);a.data="success"}catch(e){a.messageName="error",console.log(e)}r.send(JSON.stringify(a))},B=async(e,r)=>{var a={messageName:"joinGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;const s=await Promise.all([k.getMember(o[0].UserID,e.params.groupID),W(o[0].UserID,e.params.groupID)]);if(0!==s[0].length)a.data="already member";else if(1!==s[1].length)a.data="not invited";else{await k.addMember(e.params.groupID,o[0].UserID),await C(o[0].UserID,e.params.groupID);a.data="success"}}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},z=async(e,r)=>{var a={messageName:"leaveGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;await k.deleteMember(e.params.groupID,o[0].UserID);a.data="success"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};var $=e=>new Promise((r,a)=>{F("SELECT Account.UserAccount AS friendName, Account.UserID AS friendID FROM Account INNER JOIN FriendList ON FriendList.UserID2 = Account.UserID WHERE FriendList.UserID1 = "+e+" UNION SELECT Account.UserAccount AS friendName, Account.UserID AS friendID FROM Account INNER JOIN FriendList ON FriendList.UserID1 = Account.UserID WHERE FriendList.UserID2 = "+e).then(e=>{r(e)}).catch(e=>{console.error("getUserFriend error:",e),a(e)})}),K=(e,r)=>new Promise((a,t)=>{F("SELECT * FROM FriendList WHERE (UserID1 = "+e+" AND UserID2 = "+r+" ) OR (UserID1 = "+r+" AND UserID2 = "+e+" )").then(e=>{a(e)}).catch(e=>{console.error("getFriend error:",e),t(e)})}),X=(e,r)=>new Promise((a,t)=>{F("INSERT INTO FriendList(UserID1, UserID2) VALUES("+e+","+r+")").then(e=>{a(e)}).catch(e=>{console.error("addFriend error:",e),t(e)})}),Z=(e,r)=>new Promise((a,t)=>{F("DELETE FROM FriendList WHERE (UserID1 = "+e+" AND UserID2 = "+r+") OR (UserID1 = "+r+" AND UserID2 = "+e+")").then(e=>{a(e)}).catch(e=>{console.error("deleteFriend error:",e),t(e)})});var ee=async(e,r)=>{var a={messageName:"getFriend",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;const s=await $(o[0].UserID);a.data=s}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},re=async(e,r)=>{var a={messageName:"addFriend",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;const s=await Promise.all([K(o[0].UserID,e.params.userID),H(o[0].UserID,e.params.userID)]);if(0!==s[0].length)a.data="already friend";else if(1!==s[1].length)a.data="not invited";else{await X(o[0].UserID,e.params.userID),await x(o[0].UserID,e.params.userID);a.data="success"}}catch(e){a.messageName="error",console.log(e)}r.send(JSON.stringify(a))},ae=async(e,r)=>{var a={messageName:"deleteFriend",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;await Z(e.params.userID,o[0].UserID);a.data="success"}catch(e){a.messageName="error",console.log(e)}r.send(JSON.stringify(a))};var te=async(e,r)=>{var a={messageName:"getFriendInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;const s=await _(o[0].UserID);a.data=s}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},oe=async(e,r)=>{var a={messageName:"rejectFriendInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;await x(o[0].UserID,e.params.userID);a.data="success"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},se=async(e,r)=>{var a={messageName:"snedFriendInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await Promise.all([L(t._id),L(e.params.userName)]);if(1!==o[0].length||1!==o[1].length)throw new Error;const s=await Promise.all([H(o[1][0].UserID,o[0][0].UserID),K(o[1][0].UserID,o[0][0].UserID)]);if(0!==s[1].length)a.data="already friend";else if(0!==s[0].length)a.data="already invite";else{await J(o[1][0].UserID,o[0][0].UserID);a.data="success"}}catch(e){a.messageName="error",console.log(e)}r.send(JSON.stringify(a))},ne=async(e,r)=>{var a={messageName:"getGroupInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;const s=await q(o[0].UserID);a.data=s}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},ie=async(e,r)=>{var a={messageName:"rejectGroupInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await L(t._id);if(1!==o.length)throw new Error;await C(o[0].UserID,e.params.groupID);a.data="success"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},ce=async(e,r)=>{var a={messageName:"sendGroupInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await Promise.all([L(t._id),L(e.params.userName)]);if(1!==o[0].length||1!==o[1].length)throw new Error;const s=await Promise.all([W(o[1][0].UserID,e.params.groupID),k.getMember(o[1][0].UserID,e.params.groupID)]);if(0!==s[1].length)a.data="already member";else if(0!==s[0].length)a.data="already invite";else{await j(o[1][0].UserID,e.params.groupID);a.data="success"}}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};var ue=async(e,r)=>{var a={messageName:"userData",data:"Auth fail or database error"};try{const r=e.cookies.token,t=await U(r),o=await T(t._id);if(1!==o.length)throw new Error;a.data=o}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};var de=(e,r)=>new Promise((a,t)=>{F("Select UserPassword From Account Where UserAccount = '"+e+"'").then(e=>{0==e.length?a("account not found"):e[0].UserPassword===r?a("success"):a("password incorrect")}).catch(e=>{e&&(console.error("checkAccount error:",e),t(e))})});var le=async(e,r)=>{var a={messageName:"login",data:"Auth fail or database error"};try{const t=await de(e.params.userAccount,e.params.userPassword);if("success"===t){await S(e.params.userAccount,r)}a.data=t}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};var ge=(e,r)=>new Promise((a,t)=>{F("INSERT INTO Account(UserAccount, UserPassword) VALUES('"+e+"','"+r+"')").then(e=>{a(e)}).catch(e=>{console.error("createAccount error:",e),t(e)})});var me=async(e,r)=>{var a={messageName:"register",data:"Auth fail or database error"};try{const r=await de(e.params.userAccount,e.params.userPassword);if("account not found"===r){await ge(e.params.userAccount,e.params.userPassword);a.data=r}else a.data="account exist"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};P.a.createPool({connection:10,host:p.mysqlHost,user:p.mysqlUserName,password:p.mysqlPass,database:p.mysqlDatabase});var pe=(e,r,a)=>new Promise((t,o)=>{var s=new Date,n=s.getFullYear()+"-"+(s.getMonth()+1)+"-"+s.getDate(),i=s.getHours()+":"+s.getMinutes()+":"+s.getSeconds();F("INSERT INTO GroupMessage(GroupID, FromUserID, Message, Time) VALUES('"+e+"','"+r+"','"+a+"','"+(n+" "+i)+"')").then(e=>{t(e)}).catch(e=>{console.error("SQL error:",e),o(e)})}),Ie=e=>new Promise((r,a)=>{connectionPool.getConnection((t,o)=>{if(t)a(t);else{var s="SELECT Account.UserAccount, GroupMessage.Message, GroupMessage.Time FROM GroupMessage INNER JOIN Account ON Account.UserID = GroupMessage.FromUserID WHERE GroupMessage.GroupID = "+e+" ORDER BY GroupMessage.MessageID limit 50";o.query(s,(function(e,t){e?(console.error("SQL error:",e),a(e)):r(t)})),o.release()}})});var fe={getGroupMember:e=>new Promise((r,a)=>{k.getGroupMember(e).then(e=>{r(e)}).catch(e=>{a(e)})}),saveGroupMessage:e=>new Promise((r,a)=>{pe(e.groupID,e.fromUserID,e.message).then(e=>{r(e)}).catch(e=>{a(e)})}),getOldGroupMessage:(e,r)=>{const a=o.a.createClient();a.on("connect",()=>{console.log("Redis client connected")}),a.LRANGE(e.params.groupID+"_groupMessage",0,50,(t,o)=>{if(0!=o.length){var s={messageName:"getOldGroupMessage"};for(let e=0;e<o.length;e++)o[e]=JSON.parse(o[e]);s.data=o,a.expire(e.params.groupID+"_groupMessage",1e3),r.send(JSON.stringify(s))}else Ie(e.params.groupID).then(t=>{var o={messageName:"getOldGroupMessage"};o.data=t;for(var s=0;s<o.data.length;s++)a.RPUSH(e.params.groupID+"_groupMessage",JSON.stringify(o.data[s]));a.expire(e.params.groupID+"_groupMessage",1e3),r.send(JSON.stringify(o))}).catch(e=>{reject(e)});if(t)throw console.log(t),t})},saveFriendMessage:e=>new Promise((r,a)=>{pe(e.friendID,e.fromUserID,e.message).then(e=>{r(e)}).catch(e=>{a(e)})}),getOldFriendMessage:(e,r)=>{const a=o.a.createClient();a.on("connect",()=>{console.log("Redis client connected")}),a.LRANGE(r.params.friendID+"_friendMessage",0,50,(e,t)=>{if(0!=t.length){var o={messageName:"getOldFriendMessage"};for(let e=0;e<t.length;e++)t[e]=JSON.parse(t[e]);o.data=t,a.expire(friendID+"_friendMessage",1e3),r.send(JSON.stringify(o))}else Ie(r.params.friendID).then(e=>{var t={messageName:"getOldGroupMessage"};t.data=e;for(var o=0;o<t.data.length;o++)a.RPUSH(r.params.friendID+"_friendMessage",JSON.stringify(t.data[o]));a.expire(r.params.friendID+"_friendMessage",1e3),r.send(JSON.stringify(t))}).catch(e=>{reject(e)});if(e)throw console.log(e),e})}};a(14);const De=f.a.Router();De.get("/login/:userAccount/:userPassword",(function(e,r){le(e,r)})),De.post("/register/:userAccount/:userPassword",(function(e,r){me(e,r)})),De.get("/userData",(function(e,r){ue(e,r)})),De.post("/createGroup/:groupName",(function(e,r){Q(e,r)})),De.delete("/deleteGroup/:groupID",(function(e,r){V(e,r)})),De.get("/group",(function(e,r){Y(e,r)})),De.post("/group/:groupID",(function(e,r){B(e,r)})),De.delete("/group/:groupID",(function(e,r){z(e,r)})),De.get("/groupInvite",(function(e,r){ne(e,r)})),De.post("/groupInvite/:userName/:groupID",(function(e,r){ce(e,r)})),De.delete("/groupInvite/:groupID",(function(e,r){ie(e,r)})),De.get("/friend",(function(e,r){ee(e,r)})),De.post("/friend/:userID",(function(e,r){re(e,r)})),De.delete("/friend/:userID",(function(e,r){ae(e,r)})),De.get("/friendInvite",(function(e,r){te(e,r)})),De.post("/friendInvite/:userName",(function(e,r){se(e,r)})),De.delete("/friendInvite/:userID",(function(e,r){oe(e,r)})),De.get("/oldMessage/:groupID",(function(e,r){})),De.get("/friendOldMessage/:userID",(function(e,r){}));var he=De;const we=f.a.Router();we.get("/",(e,r)=>{r.render("ErrorPage")});var Ee=we;const Ne=f.a.Router();Ne.use("/login",h),Ne.use("/register",E),Ne.use("/mainPage",A),Ne.use("/verification",R),Ne.use("/file",he),Ne.use("/error",Ee);var ve=Ne,Ue=a(6),Se=a.n(Ue),ye=a(8),Oe=a.n(ye),Ae=a(9),Me=a.n(Ae),Re=a(10),Ge=a.n(Re),Pe=a(11),be=a.n(Pe);const Fe=f()();Fe.use(Se.a.json()),Fe.use(Se.a.urlencoded({extended:!0})),Fe.use(be()()),Fe.use(Oe()()),Fe.use(Me()("dev")),Fe.set("views","./views"),Fe.set("view engine","jade"),Fe.upload=function(e,r){console.log(e.body)},Fe.use("/OnlineText",ve),Fe.use(f.a.static(Ge.a.join("C:/OnlineText/","public"))),Fe.use((function(e,r){r.status(404).render("404Page")}));var Le=Fe,Te=a(12),ke=a.n(Te),_e=[];const He={key:n.a.readFileSync("key.pem"),cert:n.a.readFileSync("cert.pem")},xe=c.a.createServer(He,Le),Je=new ke.a.Server({server:xe,verifyClient:function(e,r){var a=e.req.headers.cookie,t={};a?(a.split(";").forEach((function(e){var r=e.split("=");t[r.shift().trim()]=decodeURI(r.join("="))})),U(t.token).then(e=>{r(!0)}).catch(e=>{console.log(e),r(!1,401,"Unauthorized")})):r(!1,401,"Unauthorized")}});Je.on("connection",e=>{_e.push(e),e.on("message",r=>{var a=JSON.parse(r);switch(a.messageName){case"userAccount":L(a.data).then(r=>{e.account=a.data,e.id=r.UserID}).catch(e=>{res.send(e)});break;case"groupMessage":a.data.fromUserID=e.id,a.data.fromUserAccount=e.account,fe.saveMessage(a.data).then(e=>fe.getMember(a.data.groupName)).then(e=>{const r=o.a.createClient();r.on("connect",()=>{console.log("Redis client connected")});let t={};t.UserAccount=a.data.fromUserAccount,t.Message=a.data.message,r.RPUSH(a.data.groupID+"_groupMessage",JSON.stringify(t)),r.expire(a.data.groupID+"_groupMessage",1e3);for(var s=0;s<_e.length;s++)e.some(e=>e.UserID===_e[s].id)&&_e[s].send(JSON.stringify(a))}).catch(e=>{console.log(e)})}}),e.on("close",()=>{console.log("Close connected");const r=_e.indexOf(e);r>-1&&_e.splice(r,1)})}),xe.listen(p.port,()=>{console.log(`server started on port https://127.0.\n    0.1:${p.port} (${p.env})`)});r.default={app:Le,wss:Je}}]);
//# sourceMappingURL=index.bundle.js.map