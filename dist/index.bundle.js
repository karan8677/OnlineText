module.exports=function(e){var r={};function a(s){if(r[s])return r[s].exports;var t=r[s]={i:s,l:!1,exports:{}};return e[s].call(t.exports,t,t.exports,a),t.l=!0,t.exports}return a.m=e,a.c=r,a.d=function(e,r,s){a.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:s})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,r){if(1&r&&(e=a(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var t in e)a.d(s,t,function(r){return e[r]}.bind(null,t));return s},a.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(r,"a",r),r},a.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},a.p="",a(a.s=15)}([function(e,r){e.exports=require("express")},function(e,r){e.exports=require("joi")},function(e,r){e.exports=require("redis")},function(e,r){e.exports=require("fs")},function(e,r){e.exports=require("mysql")},function(e,r){e.exports=require("jsonwebtoken")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("https")},function(e,r){e.exports=require("cors")},function(e,r){e.exports=require("morgan")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("cookie-parser")},function(e,r){e.exports=require("ws")},function(e,r){e.exports=require("dotenv")},function(e,r){e.exports=require("multer")},function(e,r,a){"use strict";a.r(r);var s=a(2),t=a.n(s),o=a(3),n=a.n(o),i=a(7),c=a.n(i),u=a(1),d=a.n(u);a(13).config();const g=d.a.object().keys({NODE_ENV:d.a.string().default("development").allow(["development","production"]),PORT:d.a.number().default(8080),MYSQL_PORT:d.a.number().default(3306),MYSQL_HOST:d.a.string().default("127.0.0.1"),MYSQL_USER:d.a.string(),MYSQL_PASS:d.a.string(),MYSQL_NAME:d.a.string(),VERSION:d.a.string()}).unknown().required(),{error:m,value:l}=d.a.validate(process.env,g);if(m)throw new Error("Config validation error: "+m.message);var I={version:l.VERSION,env:l.NODE_ENV,port:l.PORT,mysqlPort:l.MYSQL_PORT,mysqlHost:l.MYSQL_HOST,mysqlUserName:l.MYSQL_USER,mysqlPass:l.MYSQL_PASS,mysqlDatabase:l.MYSQL_DATABASE},p=a(0),D=a.n(p);const f=D.a.Router();f.get("/",(e,r)=>{r.render("Login")});var h=f;const N=D.a.Router();N.get("/",(e,r)=>{r.render("Register")});var E=N,w=a(5),v=a.n(w);var U=e=>new Promise((r,a)=>{v.a.verify(e,"thisismynewproject",(e,s)=>{e?(console.error("jwtVerify error:",e),a(e)):r(s)})}),y=(e,r)=>new Promise((a,s)=>{try{const s=v.a.sign({_id:e.toString()},"thisismynewproject",{expiresIn:"1 day"});r.cookie("token",s,{maxAge:1e7,httpOnly:!0,secure:!1}),a("CookieSet")}catch(e){console.error("jwtSetCookie error:",e),s(e)}});var S=(e,r)=>{const a=e.cookies.token;U(a).then(e=>{r.render("mainPage")}).catch(e=>{r.redirect("https://127.0.0.1:3000/OnlineText/login")})};const A=D.a.Router();A.get("/",(e,r)=>{S(e,r)});var O=A;const M=D.a.Router();M.get("/",(e,r)=>{r.render("Verification")});var R=M,F=a(4),G=a.n(F);const P=G.a.createPool({connection:10,host:I.mysqlHost,user:I.mysqlUserName,password:I.mysqlPass,database:I.mysqlDatabase});var b=e=>new Promise((r,a)=>{P.getConnection((s,t)=>{s?a(s):(t.query(e,(function(e,s){e?(console.error("SQL error:",e),a(e)):r(s)})),t.release())})});var L=e=>new Promise((r,a)=>{b("SELECT UserID FROM Account WHERE UserAccount = '"+e+"'").then(e=>{r(e)}).catch(e=>{console.error("getUserID error:",e),a(e)})}),T=e=>new Promise((r,a)=>{b("SELECT UserID AS userID , UserAccount AS userName FROM Account WHERE UserAccount = '"+e+"'").then(e=>{r(e)}).catch(e=>{console.error("getUserData error:",e),a(e)})});var k=e=>new Promise((r,a)=>{b("SELECT GroupList.GroupID AS groupID, GroupList.GroupName AS groupName FROM Member INNER JOIN GroupList ON GroupList.GroupID = Member.GroupID WHERE Member.UserID = "+e).then(e=>{r(e)}).catch(e=>{console.error("getUserGroup error:",e),a(e)})}),_=(e,r,a)=>new Promise((s,t)=>{var o="SELECT * FROM GroupList WHERE GroupName = '"+e+"' AND OwnID = "+r+" ORDER BY GroupID DESC ";"all"!==a&&(o+="limit "+a),b(o).then(e=>{s(e)}).catch(e=>{console.error("getGroup error:",e),t(e)})}),H=(e,r)=>new Promise((a,s)=>{var t=new Date,o=t.getFullYear()+"-"+(t.getMonth()+1)+"-"+t.getDate(),n=t.getHours()+":"+t.getMinutes()+":"+t.getSeconds();b("INSERT INTO GroupList(GroupName, Time, MemberNum, OwnID) VALUES('"+e+"','"+(o+" "+n)+"','1','"+r+"')").then(e=>{a(e)}).catch(e=>{console.error("createGroup error:",e),s(e)})}),J=e=>new Promise((r,a)=>{b("DELETE FROM GroupList WHERE GroupID = "+e).then(e=>{r(e)}).catch(e=>{console.error("deleteGroup error:",e),a(e)})}),x=(e,r)=>new Promise((a,s)=>{var t="SELECT * FROM Member";b(t+="all"===e?" WHERE GroupID = "+r:"all"===r?" WHERE UserID = "+e:" WHERE UserID = "+e+" AND GroupID = "+r).then(e=>{a(e)}).catch(e=>{console.error("getMember error:",e),s(e)})}),q=(e,r)=>new Promise((a,s)=>{b("INSERT INTO Member(GroupID, UserID) VALUES('"+e+"','"+r+"')").then(e=>{a(e)}).catch(e=>{console.error("addMember error:",e),s(e)})}),W=(e,r)=>new Promise((a,s)=>{var t="DELETE FROM Member ";b(t+="all"===e?"WHERE UserID = "+r:"all"===r?"WHERE GroupID = "+e:"WHERE GroupID = "+e+" AND UserID = "+r).then(e=>{a(e)}).catch(e=>{console.error("deleteMember error:",e),s(e)})});var C=e=>new Promise((r,a)=>{b("SELECT Account.UserAccount AS userName ,Account.UserID AS userID FROM Account INNER JOIN FriendInvite ON FriendInvite.FromUserID = Account.UserID WHERE FriendInvite.ToUserID ="+e).then(e=>{r(e)}).catch(e=>{console.error("getFriendInvite error:",e),a(e)})}),j=(e,r)=>new Promise((a,s)=>{var t="SELECT * FROM FriendInvite ";b(t+="all"===e?"WHERE FromUserID = "+r:"all"===r?"WHERE ToUserID = "+e:"WHERE ToUserID = "+e+" AND FromUserID = "+r).then(e=>{a(e)}).catch(e=>{console.error("getFriendInvite error:",e),s(e)})}),Y=(e,r)=>new Promise((a,s)=>{var t="DELETE FROM FriendInvite ";b(t+="all"===e?"WHERE FromUserID = "+r:"all"===r?"WHERE ToUserID = "+e:"WHERE ToUserID = "+e+" AND FromUserID = "+r).then(e=>{a(e)}).catch(e=>{console.error("deleteFriendInvite error:",e),s(e)})}),V=(e,r)=>new Promise((a,s)=>{b("INSERT INTO FriendInvite(ToUserID, FromUserID) VALUES('"+e+"','"+r+"') ").then(e=>{a(e)}).catch(e=>{console.error("postFriendInvite error:",e),s(e)})}),Q=e=>new Promise((r,a)=>{b("SELECT GroupList.GroupName AS groupName, GroupList.GroupID AS groupID FROM GroupList INNER JOIN GroupInvite ON GroupInvite.GroupID = GroupList.GroupID WHERE GroupInvite.UserID = "+e).then(e=>{r(e)}).catch(e=>{console.error("getUserGroupInvite error:",e),a(e)})}),B=(e,r)=>new Promise((a,s)=>{var t="SELECT * FROM GroupInvite ";b(t+="all"===e?"WHERE GroupID = "+r:"all"===r?"WHERE UserID = "+e:"WHERE UserID = "+e+" AND GroupID = "+r).then(e=>{a(e)}).catch(e=>{console.error("getGroupInvite error:",e),s(e)})}),z=(e,r)=>new Promise((a,s)=>{var t="DELETE FROM GroupInvite WHERE ";b(t+="all"===e?"GroupID = "+r:"all"===r?"UserID = "+e:"UserID = "+e+" AND GroupID = "+r).then(e=>{a(e)}).catch(e=>{console.error("deleteGroupInvite error:",e),s(e)})}),$=(e,r)=>new Promise((a,s)=>{b("INSERT INTO GroupInvite(UserID, GroupID) VALUES('"+e+"','"+r+"') ").then(e=>{a(e)}).catch(e=>{console.error("postGroupInvite error:",e),s(e)})});var K=async(e,r)=>{var a={messageName:"getGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;const o=await k(t[0].UserID);a.data=o}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},X=async(e,r)=>{var a={messageName:"createGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;await H(e.params.groupName,t[0].UserID);const o=await _(e.params.groupName,t[0].UserID,1);if(1!==o.length)throw new Error;await q(o[0].GroupID,t[0].UserID);a.data="success"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},Z=async(e,r)=>{var a={messageName:"deleteGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r);if(1!==(await L(s._id)).length)throw new Error;await Promise.all([W(e.params.groupID,"all"),z("all",e.params.groupID)]),await J(e.params.groupID);a.data="success"}catch(e){a.messageName="error",console.log(e)}r.send(JSON.stringify(a))},ee=async(e,r)=>{var a={messageName:"joinGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;const o=await Promise.all([x(t[0].UserID,e.params.groupID),B(t[0].UserID,e.params.groupID)]);if(0!==o[0].length)a.data="already member";else if(1!==o[1].length)a.data="not invited";else{await q(e.params.groupID,t[0].UserID),await z(t[0].UserID,e.params.groupID);a.data="success"}}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},re=async(e,r)=>{var a={messageName:"leaveGroup",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;await W(e.params.groupID,t[0].UserID);a.data="success"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};var ae=e=>new Promise((r,a)=>{b("SELECT Account.UserAccount AS friendName, FriendList.FriendID AS friendID FROM Account INNER JOIN FriendList ON FriendList.UserID2 = Account.UserID WHERE FriendList.UserID1 = "+e+" UNION SELECT Account.UserAccount AS friendName, FriendList.FriendID AS friendID FROM Account INNER JOIN FriendList ON FriendList.UserID1 = Account.UserID WHERE FriendList.UserID2 = "+e).then(e=>{r(e)}).catch(e=>{console.error("getUserFriend error:",e),a(e)})}),se=(e,r)=>new Promise((a,s)=>{b("SELECT * FROM FriendList WHERE (UserID1 = "+e+" AND UserID2 = "+r+" ) OR (UserID1 = "+r+" AND UserID2 = "+e+" )").then(e=>{a(e)}).catch(e=>{console.error("getFriend error:",e),s(e)})}),te=(e,r)=>new Promise((a,s)=>{b("INSERT INTO FriendList(UserID1, UserID2) VALUES("+e+","+r+")").then(e=>{a(e)}).catch(e=>{console.error("addFriend error:",e),s(e)})}),oe=(e,r)=>new Promise((a,s)=>{b("DELETE FROM FriendList WHERE (UserID1 = "+e+" AND UserID2 = "+r+") OR (UserID1 = "+r+" AND UserID2 = "+e+")").then(e=>{a(e)}).catch(e=>{console.error("deleteFriend error:",e),s(e)})});var ne=async(e,r)=>{var a={messageName:"getFriend",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;const o=await ae(t[0].UserID);a.data=o}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},ie=async(e,r)=>{var a={messageName:"addFriend",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;const o=await Promise.all([se(t[0].UserID,e.params.userID),j(t[0].UserID,e.params.userID)]);if(0!==o[0].length)a.data="already friend";else if(1!==o[1].length)a.data="not invited";else{await te(t[0].UserID,e.params.userID),await Y(t[0].UserID,e.params.userID);a.data="success"}}catch(e){a.messageName="error",console.log(e)}r.send(JSON.stringify(a))},ce=async(e,r)=>{var a={messageName:"deleteFriend",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;await oe(e.params.userID,t[0].UserID);a.data="success"}catch(e){a.messageName="error",console.log(e)}r.send(JSON.stringify(a))};var ue=async(e,r)=>{var a={messageName:"getFriendInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;const o=await C(t[0].UserID);a.data=o}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},de=async(e,r)=>{var a={messageName:"rejectFriendInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;await Y(t[0].UserID,e.params.userID);a.data="success"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},ge=async(e,r)=>{var a={messageName:"snedFriendInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await Promise.all([L(s._id),L(e.params.userName)]);if(1!==t[0].length||1!==t[1].length)throw new Error;const o=await Promise.all([j(t[1][0].UserID,t[0][0].UserID),se(t[1][0].UserID,t[0][0].UserID)]);if(0!==o[1].length)a.data="already friend";else if(0!==o[0].length)a.data="already invite";else{await V(t[1][0].UserID,t[0][0].UserID);a.data="success"}}catch(e){a.messageName="error",console.log(e)}r.send(JSON.stringify(a))},me=async(e,r)=>{var a={messageName:"getGroupInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;const o=await Q(t[0].UserID);a.data=o}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},le=async(e,r)=>{var a={messageName:"rejectGroupInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await L(s._id);if(1!==t.length)throw new Error;await z(t[0].UserID,e.params.groupID);a.data="success"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))},Ie=async(e,r)=>{var a={messageName:"sendGroupInvite",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await Promise.all([L(s._id),L(e.params.userName)]);if(1!==t[0].length||1!==t[1].length)throw new Error;const o=await Promise.all([B(t[1][0].UserID,e.params.groupID),x(t[1][0].UserID,e.params.groupID)]);if(0!==o[1].length)a.data="already member";else if(0!==o[0].length)a.data="already invite";else{await $(t[1][0].UserID,e.params.groupID);a.data="success"}}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};var pe=async(e,r)=>{var a={messageName:"userData",data:"Auth fail or database error"};try{const r=e.cookies.token,s=await U(r),t=await T(s._id);if(1!==t.length)throw new Error;a.data=t}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};var De=(e,r)=>new Promise((a,s)=>{b("Select UserPassword From Account Where UserAccount = '"+e+"'").then(e=>{0==e.length?a("account not found"):e[0].UserPassword===r?a("success"):a("password incorrect")}).catch(e=>{console.error("checkAccount error:",e),s(e)})});var fe=async(e,r)=>{var a={messageName:"login",data:"Auth fail or database error"};try{const s=await De(e.params.userAccount,e.params.userPassword);if("success"===s){await y(e.params.userAccount,r)}a.data=s}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};var he=(e,r)=>new Promise((a,s)=>{b("INSERT INTO Account(UserAccount, UserPassword) VALUES('"+e+"','"+r+"')").then(e=>{a(e)}).catch(e=>{console.error("createAccount error:",e),s(e)})});var Ne=async(e,r)=>{var a={messageName:"register",data:"Auth fail or database error"};try{if("account not found"===await De(e.params.userAccount,e.params.userPassword)){await he(e.params.userAccount,e.params.userPassword);a.data="success"}else a.data="account exist"}catch(e){a.messageName="error"}r.send(JSON.stringify(a))};G.a.createPool({connection:10,host:I.mysqlHost,user:I.mysqlUserName,password:I.mysqlPass,database:I.mysqlDatabase});var Ee=(e,r,a,s)=>new Promise((t,o)=>{b("INSERT INTO GroupMessage(GroupID, FromUserID, Message, Time) VALUES('"+e+"','"+r+"','"+a+"','"+s+"')").then(e=>{t(e)}).catch(e=>{console.error("saveGroupMessage error:",e),o(e)})}),we=(e,r)=>new Promise((a,s)=>{Number(r),Number(r);b("SELECT Account.UserAccount AS fromUserName, GroupMessage.Message AS message, GroupMessage.Time AS time, GroupMessage.GroupID AS groupID FROM GroupMessage INNER JOIN Account ON Account.UserID = GroupMessage.FromUserID WHERE GroupMessage.GroupID = "+e+" ORDER BY GroupMessage.MessageID limit "+r+","+(r+50)).then(e=>{a(e)}).catch(e=>{console.error("getGroupMessage error:",e),s(e)})}),ve=(e,r,a,s)=>new Promise((t,o)=>{b("INSERT INTO FriendMessage(FriendID, FromUserID, Message, Time) VALUES('"+e+"','"+r+"','"+a+"','"+s+"')").then(e=>{t(e)}).catch(e=>{console.error("saveFriendMessage error:",e),o(e)})}),Ue=(e,r)=>new Promise((a,s)=>{b("SELECT Account.UserAccount AS fromUserName, FriendMessage.Message AS message, FriendMessage.Time AS time, FriendMessage.FriendID AS friendID FROM FriendMessage INNER JOIN Account  ON FriendMessage.FromUserID = Account.UserID WHERE FriendMessage.FriendID = "+e+" ORDER BY FriendMessage.MessageID limit "+r+","+(r+50)).then(e=>{a(e)}).catch(e=>{console.error("getFriendMessage error:",e),s(e)})}),ye=e=>new Promise((r,a)=>{b("SELECT * FROM FriendList WHERE FriendList.FriendID = "+e).then(e=>{r(e)}).catch(e=>{console.error("getFriendMessage error:",e),a(e)})});var Se=async e=>{var r={messageName:"getGroupMember",data:"Auth fail or database error"};try{const a=await x("all",e);return r.data=a,r}catch(e){return r.messageName="error",e}},Ae=async(e,r)=>{var a={messageName:"saveGroupMessage",data:"Auth fail or database error"};try{await Ee(e.groupID,e.fromUserID,e.message,e.time);const s=t.a.createClient();return s.on("connect",()=>{console.log("Redis client connected")}),s.RPUSH(e.groupID+"_groupMessage",JSON.stringify(r)),s.expire(e.groupID+"_groupMessage",1e3),a.data="success",a}catch(e){return a.messageName="error",e}},Oe=async(e,r)=>{var a={messageName:"getOldGroupMessage",data:"Auth fail or database error"};try{const s=t.a.createClient();s.on("connect",()=>{console.log("Redis client connected")}),s.LRANGE(e.params.groupID+"_groupMessage",0,50,async(t,o)=>{const n=await we(e.params.groupID,e.params.messageID);a.data=n;for(var i=0;i<a.data.length;i++)s.RPUSH(e.params.groupID+"_groupMessage",JSON.stringify(a.data[i]));s.expire(e.params.groupID+"_groupMessage",1e3),r.send(JSON.stringify(a))})}catch(e){a.messageName="error",r.send(JSON.stringify(a))}},Me=async e=>{var r={messageName:"getGroupMember",data:"Auth fail or database error"};try{const a=await ye(e);return r.data=a,r}catch(e){return r.messageName="error",e}},Re=async(e,r)=>{var a={messageName:"saveFriendMessage",data:"Auth fail or database error"};try{await ve(e.friendID,e.fromUserID,e.message,e.time);const s=t.a.createClient();return s.on("connect",()=>{console.log("Redis client connected")}),s.RPUSH(e.friendID+"_friendMessage",JSON.stringify(r)),s.expire(e.friendID+"_friendMessage",1e3),a.data="success",a}catch(e){return a.messageName="error",e}},Fe=async(e,r)=>{var a={messageName:"getOldFriendMessage",data:"Auth fail or database error"};try{const s=t.a.createClient();s.on("connect",()=>{console.log("Redis client connected")}),s.LRANGE(e.params.friendID+"_friendMessage",0,50,async(t,o)=>{const n=await Ue(e.params.friendID,e.params.messageID);a.data=n;for(var i=0;i<a.data.length;i++)s.RPUSH(e.params.friendID+"_friendMessage",JSON.stringify(a.data[i]));s.expire(e.params.friendID+"_friendMessage",1e3),r.send(JSON.stringify(a))})}catch(e){a.messageName="error",console.log(e),r.send(JSON.stringify(a))}};a(14);const Ge=D.a.Router();Ge.get("/login/:userAccount/:userPassword",(function(e,r){fe(e,r)})),Ge.post("/register/:userAccount/:userPassword",(function(e,r){Ne(e,r)})),Ge.get("/userData",(function(e,r){pe(e,r)})),Ge.post("/createGroup/:groupName",(function(e,r){X(e,r)})),Ge.delete("/deleteGroup/:groupID",(function(e,r){Z(e,r)})),Ge.get("/group",(function(e,r){K(e,r)})),Ge.post("/group/:groupID",(function(e,r){ee(e,r)})),Ge.delete("/group/:groupID",(function(e,r){re(e,r)})),Ge.get("/groupInvite",(function(e,r){me(e,r)})),Ge.post("/groupInvite/:userName/:groupID",(function(e,r){Ie(e,r)})),Ge.delete("/groupInvite/:groupID",(function(e,r){le(e,r)})),Ge.get("/friend",(function(e,r){ne(e,r)})),Ge.post("/friend/:userID",(function(e,r){ie(e,r)})),Ge.delete("/friend/:userID",(function(e,r){ce(e,r)})),Ge.get("/friendInvite",(function(e,r){ue(e,r)})),Ge.post("/friendInvite/:userName",(function(e,r){ge(e,r)})),Ge.delete("/friendInvite/:userID",(function(e,r){de(e,r)})),Ge.get("/oldGroupMessage/:groupID/:messageID",(function(e,r){Oe(e,r)})),Ge.get("/oldFriendMessage/:friendID/:messageID",(function(e,r){Fe(e,r)}));var Pe=Ge;const be=D.a.Router();be.get("/",(e,r)=>{r.render("ErrorPage")});var Le=be;const Te=D.a.Router();Te.use("/login",h),Te.use("/register",E),Te.use("/mainPage",O),Te.use("/verification",R),Te.use("/file",Pe),Te.use("/error",Le);var ke=Te,_e=a(6),He=a.n(_e),Je=a(8),xe=a.n(Je),qe=a(9),We=a.n(qe),Ce=a(10),je=a.n(Ce),Ye=a(11),Ve=a.n(Ye);const Qe=D()();Qe.use(He.a.json()),Qe.use(He.a.urlencoded({extended:!0})),Qe.use(Ve()()),Qe.use(xe()()),Qe.use(We()("dev")),Qe.set("views","./views"),Qe.set("view engine","jade"),Qe.upload=function(e,r){console.log(e.body)},Qe.use("/OnlineText",ke),Qe.use(D.a.static(je.a.join("C:/OnlineText/","public"))),Qe.use((function(e,r){r.status(404).render("404Page")}));var Be=Qe,ze=a(12),$e=a.n(ze),Ke=[];const Xe={key:n.a.readFileSync("key.pem"),cert:n.a.readFileSync("cert.pem")},Ze=c.a.createServer(Xe,Be),er=new $e.a.Server({server:Ze,verifyClient:function(e,r){var a=e.req.headers.cookie,s={};a?(a.split(";").forEach((function(e){var r=e.split("=");s[r.shift().trim()]=decodeURI(r.join("="))})),U(s.token).then(e=>{r(!0)}).catch(e=>{console.log(e),r(!1,401,"Unauthorized")})):r(!1,401,"Unauthorized")}});er.on("connection",e=>{Ke.push(e),e.on("message",r=>{var a=JSON.parse(r);switch(a.messageName){case"userAccount":L(a.data).then(r=>{e.account=a.data,e.id=r[0].UserID;var s={messageName:"userID"};s.data=r[0].UserID,e.send(JSON.stringify(s))}).catch(r=>{e.send(JSON.stringify(r))});break;case"groupMessage":var s=(t=new Date).getFullYear()+"-"+(t.getMonth()+1)+"-"+t.getDate()+" "+(t.getHours()+":"+t.getMinutes()+":"+t.getSeconds());a.data.time=s,a.data.fromUserID=e.id,a.data.fromUserAccount=e.account,(o={}).fromUserName=a.data.fromUserAccount,o.groupID=a.data.groupID,o.message=a.data.message,o.time=s,Ae(a.data,o).then(e=>Se(a.data.groupID)).then(e=>{var r={messageName:"groupMessage"};r.data=[o];for(var a=0;a<Ke.length;a++)e.data.some(e=>e.UserID===Ke[a].id)&&Ke[a].send(JSON.stringify(r))}).catch(e=>{console.log(e)});break;case"friendMessage":var t,o;s=(t=new Date).getFullYear()+"-"+(t.getMonth()+1)+"-"+t.getDate()+" "+(t.getHours()+":"+t.getMinutes()+":"+t.getSeconds());a.data.time=s,a.data.fromUserID=e.id,a.data.fromUserAccount=e.account,(o={}).fromUserName=a.data.fromUserAccount,o.friendID=a.data.friendID,o.message=a.data.message,o.time=s,Re(a.data,o).then(e=>Me(a.data.friendID,a.data.fromUserID)).then(e=>{var r={messageName:"friendMessage"};r.data=[o];for(var a=0;a<Ke.length;a++)(e.data.some(r=>e.data[0].UserID1===Ke[a].id)||e.data.some(r=>e.data[0].UserID2===Ke[a].id))&&Ke[a].send(JSON.stringify(r))}).catch(e=>{console.log(e)})}}),e.on("close",()=>{console.log("Close connected");const r=Ke.indexOf(e);r>-1&&Ke.splice(r,1)})}),Ze.listen(I.port,()=>{console.log(`server started on port https://127.0.\n    0.1:${I.port} (${I.env})`)});r.default={app:Be,wss:er}}]);
//# sourceMappingURL=index.bundle.js.map