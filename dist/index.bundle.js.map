{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"express\"","webpack:///external \"joi\"","webpack:///external \"redis\"","webpack:///external \"fs\"","webpack:///external \"mysql\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"body-parser\"","webpack:///external \"https\"","webpack:///external \"cors\"","webpack:///external \"morgan\"","webpack:///external \"path\"","webpack:///external \"cookie-parser\"","webpack:///external \"ws\"","webpack:///external \"dotenv\"","webpack:///external \"multer\"","webpack:///./src/config/config.js","webpack:///./src/server/routes/login.route.js","webpack:///./src/server/routes/register.route.js","webpack:///./src/server/modules/jwt.module.js","webpack:///./src/server/controllers/mainPage.Controller.js","webpack:///./src/server/routes/mainPage.route.js","webpack:///./src/server/routes/verification.route.js","webpack:///./src/server/modules/mysql.module.js","webpack:///./src/server/modules/group.module.js","webpack:///./src/server/modules/userData.module.js","webpack:///./src/server/controllers/group.controller.js","webpack:///./src/server/modules/invite.module.js","webpack:///./src/server/controllers/invite.controller.js","webpack:///./src/server/modules/friend.module.js","webpack:///./src/server/controllers/userData.controller.js","webpack:///./src/server/modules/login.module.js","webpack:///./src/server/controllers/login.controller.js","webpack:///./src/server/modules/register.module.js","webpack:///./src/server/controllers/register.controller.js","webpack:///./src/server/modules/image.module.js","webpack:///./src/server/modules/message.module.js","webpack:///./src/server/controllers/message.controller.js","webpack:///./src/server/routes/file.route.js","webpack:///./src/server/routes/error.route.js","webpack:///./src/server/routes/index.route.js","webpack:///./src/config/express.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","config","envVarSchema","Joi","keys","NODE_ENV","string","default","allow","PORT","number","MYSQL_PORT","MYSQL_HOST","MYSQL_USER","MYSQL_PASS","MYSQL_NAME","VERSION","unknown","required","error","envVars","validate","process","env","Error","message","version","port","mysqlPort","mysqlHost","mysqlUserName","mysqlPass","mysqlDatabase","MYSQL_DATABASE","router","express","Router","req","res","render","token","Promise","resolve","reject","jwt","verify","err","payload","console","user_account","sign","_id","toString","expiresIn","cookie","maxAge","httpOnly","secure","cookies","jwtModule","then","jwtVerify_result","catch","redirect","mainPageCtrl","connectionPool","mysql","createPool","connection","host","user","password","database","command","getConnection","connectionError","query","result","release","createGroup","groupName","ownID","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","deleteGroup","groupID","sqlCommand","getCertainGroupID","UserID","deleteMember","addMember","getCertainMember","userID","getGroupID","getUserGroup","getUserFriend","getUserID","userAccount","getUserData","jwt_userID","userDataModule","length","groupModule","params","jsonpackage","send","JSON","stringify","GroupID","getCertainFriendInvite","toUserID","fromUserID","getCertainGroupInvite","getFriendInvite","deleteFriendInvite","postFriendInvite","getCertainFriend","getGroupInvite","deleteGroupInvite","postGroupInvite","inviteModule","all","userName","UserID1","UserID2","userID_JWT","friendModule","userPassword","UserPassword","loginModule","registerModule","getGroupMember","saveGroupMessage","data","messageModule","getOldGroupMessage","client","redis","createClient","on","log","LRANGE","x","parse","expire","RPUSH","saveFriendMessage","friendID","getOldFriendMessage","loginCtrl","post","registerCtrl","userDataCtrl","groupCtrl","delete","inviteCtrl","use","login","register","mainPage","verification","file","app","bodyParser","json","urlencoded","extended","cookieParser","cors","morgan","set","upload","body","index","static","path","join","status","clients","SERVER_CONFIG","fs","readFileSync","cert","server","https","createServer","wss","SocketServer","Server","verifyClient","info","cb","headers","list","split","forEach","parts","shift","trim","decodeURI","ws","push","jsonData","messageName","userDataMoudule","account","id","fromUserAccount","messageCtrl","saveMessage","saveMessage_result","getMember","jsonPackage","some","item","indexOf","splice","listen"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = require(\"express\");","module.exports = require(\"joi\");","module.exports = require(\"redis\");","module.exports = require(\"fs\");","module.exports = require(\"mysql\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"body-parser\");","module.exports = require(\"https\");","module.exports = require(\"cors\");","module.exports = require(\"morgan\");","module.exports = require(\"path\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"ws\");","module.exports = require(\"dotenv\");","module.exports = require(\"multer\");","/* config.js */\r\nimport Joi from 'joi'\r\n\r\n// require and configure dotenv, will load vars in .env in PROCESS.ENV\r\nrequire('dotenv').config()\r\n\r\n// 建立每個變數 joi 驗證規則\r\nconst envVarSchema = Joi.object().keys({\r\n    NODE_ENV: Joi.string().default('development').allow(['development', 'production']), // 字串且預設值為development 並只允許兩種參數\r\n    PORT: Joi.number().default(8080), // 數字且預設值為 8080\r\n    MYSQL_PORT: Joi.number().default(3306), //數字且預設值為3306\r\n    MYSQL_HOST: Joi.string().default('127.0.0.1'), //字串取預設值為127.0.0.1\r\n    MYSQL_USER: Joi.string(), // 字串\r\n    MYSQL_PASS: Joi.string(), // 字串\r\n    MYSQL_NAME: Joi.string(), // 字串\r\n    VERSION: Joi.string() // 字串\r\n}).unknown().required()\r\n\r\n// process.env 撈取 .env 內的變數做 joi 驗證\r\nconst { error, value: envVars } = Joi.validate( process.env, envVarSchema)\r\n\r\nif (error) {\r\n    throw new Error(`Config validation error: ${error.message}`)\r\n}\r\n\r\nconst config = {\r\n    version: envVars.VERSION, // 版本\r\n    env: envVars.NODE_ENV,  // 開發模式\r\n    port: envVars.PORT,// API 阜號\r\n    mysqlPort: envVars.MYSQL_PORT, // 連接阜號(MYSQL_PORT)\r\n    mysqlHost: envVars.MYSQL_HOST, // 主機名稱 (MYSQL_HOST)\r\n    mysqlUserName: envVars.MYSQL_USER, // 用戶名稱 (MYSQL_USER)\r\n    mysqlPass: envVars.MYSQL_PASS, // 資料庫密碼(MYSQL_PASS)\r\n    mysqlDatabase: envVars.MYSQL_DATABASE  // 阜號\r\n}\r\n\r\nexport default config  // 匯出共用","import express from 'express'\r\nconst router = express.Router()\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.render('Login')\r\n})\r\n\r\nexport default router","import express from 'express'\r\n\r\nconst router = express.Router()\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.render('Register')\r\n})\r\n\r\nexport default router","import jwt from 'jsonwebtoken'\r\n\r\n\r\nconst SECRET = 'thisismynewproject'\r\nconst expires = 1000 * 1000\r\n\r\nconst jwtVerify = (token)=>{\r\n    \r\n    return new Promise((resolve, reject)=>{\r\n\r\n        jwt.verify(token, SECRET, (err, payload) =>{\r\n            \r\n            if(err){\r\n                console.error('verify error:', err)\r\n                reject(err)\r\n\r\n            }else{\r\n\r\n                resolve(payload);\r\n\r\n            }\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nconst jwtSetCookie = (user_account, res)=>{\r\n\r\n    return new Promise((resolve, reject)=>{\r\n\r\n        const token = jwt.sign({ _id: user_account.toString() }, SECRET, { expiresIn: '1 day' })\r\n        res.cookie('token', token, { maxAge: expires, httpOnly: true, secure: false })\r\n        resolve(\"CookieSet\");\r\n        \r\n    })\r\n\r\n}\r\n\r\nexport default{\r\n    jwtVerify,\r\n    jwtSetCookie\r\n}","import jwtModule from '../modules/jwt.module'\r\n\r\nconst mainPageGet = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n    jwtModule.jwtVerify(token).then((jwtVerify_result) => {\r\n\r\n        res.render('TestPage')\r\n\r\n    }).catch((err) => {\r\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n        // res.send(err)\r\n    })\r\n}\r\n\r\n\r\nexport default {\r\n    mainPageGet\r\n}","import express from 'express'\r\nimport mainPageCtrl from '../controllers/mainPage.Controller'\r\n\r\nconst router = express.Router()\r\n\r\nrouter.get('/', (req, res) => {\r\n\r\n    mainPageCtrl.mainPageGet(req, res)\r\n\r\n})\r\n\r\nexport default router","import express from 'express'\r\n\r\nconst router = express.Router()\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.render('Verification')\r\n})\r\nexport default router","import mysql from 'mysql'\r\nimport config from '../../config/config'\r\n\r\nconst connectionPool = mysql.createPool({\r\n    connection: 10,\r\n    host: config.mysqlHost,\r\n    user: config.mysqlUserName,\r\n    password: config.mysqlPass,\r\n    database: config.mysqlDatabase\r\n})\r\n\r\nconst mysqlCommand = (command) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        connectionPool.getConnection((connectionError, connection) => {\r\n\r\n            if (connectionError) {\r\n\r\n                reject(connectionError)\r\n\r\n            } else {\r\n\r\n                connection.query(command, function (err, result) {\r\n\r\n                    if(err){\r\n\r\n                        console.error('SQL error:', err)\r\n                        reject(err)\r\n\r\n                    }else{\r\n\r\n                        resolve(result)\r\n\r\n                    }\r\n\r\n                })\r\n\r\n                connection.release()\r\n\r\n            }\r\n        })\r\n\r\n    })\r\n}\r\n\r\nexport default {\r\n    mysqlCommand\r\n}","import mysql from './mysql.module'\r\n\r\nconst createGroup = (groupName, ownID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var today = new Date();\r\n        var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        var dateTime = date + ' ' + time;\r\n\r\n        var sqlCommand = \"INSERT INTO GroupList(GroupName, Time, MemberNum, OwnID) VALUES('\" +\r\n            groupName + \"','\" +\r\n            dateTime + \"','\" +\r\n            1 + \"','\" +\r\n            ownID + \"')\"\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n}\r\n\r\nconst deleteGroup = (groupID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"DELETE FROM Member WHERE GroupID = \" + groupID\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n\r\n            sqlCommand = \"DELETE FROM GroupList WHERE GroupID = \" + groupID\r\n            return mysql.mysqlCommand(sqlCommand)\r\n\r\n            \r\n        })\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n}\r\n\r\nconst getCertainGroupID = (groupName, UserID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT GroupID FROM GroupList WHERE\" + \r\n        \" GroupName = '\" + groupName + \"' AND OwnID = \" + UserID + \r\n        \" ORDER BY GroupID DESC \" +\r\n        \"limit 1\";\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n                resolve(result)\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n\r\n    })\r\n}\r\n\r\n\r\nconst deleteMember = (groupID, UserID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        var sqlCommand = \"DELETE FROM Member WHERE GroupID = \" +\r\n            groupID + \" AND UserID = \" +\r\n            UserID \r\n        mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n                resolve(result)\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n\r\n    })\r\n}\r\n\r\nconst addMember = (groupID, UserID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        var sqlCommand = \"INSERT INTO Member(GroupID, UserID) VALUES('\" +\r\n            groupID + \"','\" +\r\n            UserID + \"')\"\r\n        mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n                resolve(result)\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n\r\n    })\r\n}\r\n\r\nconst getCertainMember = (userID, groupID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT MemberID FROM Member WHERE UserID = \" +\r\n            userID + \" AND GroupID = \" + groupID\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n                resolve(result)\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nconst getGroupID = (groupName) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT GroupID FROM GroupList WHERE GroupName = '\" +\r\n            groupName +\r\n            \"'\"\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n// const getGroupMember = (groupID) => {\r\n\r\n//     return new Promise((resolve, reject) => {\r\n\r\n        \r\n//         var sqlCommand = \"SELECT Member.UserID \" +\r\n//             \"FROM Member \" +\r\n//             \"WHERE Member.GroupID = '\" +\r\n//             groupID +\r\n//             \"'\"\r\n\r\n//         mysql.mysqlCommand(sqlCommand)\r\n//         .then(result => {\r\n//             resolve(result)\r\n//         })\r\n//         .catch(err => {\r\n//             console.error('SQL error:', err)\r\n//             reject(err)\r\n//         })\r\n\r\n//     })\r\n// }\r\nexport default {\r\n    createGroup,\r\n    deleteGroup,\r\n    getCertainGroupID,\r\n    deleteMember,\r\n    addMember,\r\n    getCertainMember,\r\n    getGroupID,\r\n    // getGroupMember,\r\n\r\n}\r\n","import mysql from './mysql.module'\r\n\r\nconst getUserGroup = (userID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT GroupList.GroupID, GroupList.GroupName \" +\r\n            \"FROM Member \" +\r\n            \"INNER JOIN GroupList \" +\r\n            \"ON GroupList.GroupID = Member.GroupID \" +\r\n            \"WHERE Member.UserID = \" +\r\n            userID\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n}\r\n\r\nconst getUserFriend = (userID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT Account.UserAccount \" +\r\n            \"FROM Account \" +\r\n            \"INNER JOIN FriendList \" +\r\n            \"ON FriendList.UserID2 = Account.UserID \" +\r\n            \"WHERE FriendList.UserID1 = \" +\r\n            userID +\r\n\r\n            \" UNION SELECT Account.UserAccount \" +\r\n            \"FROM Account \" +\r\n            \"INNER JOIN FriendList \" +\r\n            \"ON FriendList.UserID1 = Account.UserID \" +\r\n            \"WHERE FriendList.UserID2 = \" +\r\n            userID \r\n\r\n            mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n                resolve(result)\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n\r\n    })\r\n}\r\n\r\nconst getUserID = (userAccount) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT UserID FROM Account WHERE UserAccount = '\" + userAccount + \"'\"\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n\r\n            resolve(result)\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n\r\nconst getUserData = (userAccount) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT UserID, UserAccount FROM Account WHERE UserAccount = '\" + userAccount + \"'\"\r\n        \r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    getUserGroup,\r\n    getUserFriend,\r\n    getUserID,\r\n    getUserData\r\n}\r\n","import groupModule from '../modules/group.module'\nimport jwtModule from '../modules/jwt.module'\nimport userDataModule from '../modules/userData.module'\n\n\nconst cresteGroup = (req, res) =>{\n\n\tconst token = req.cookies.token;\n    var jwt_userID = 0\n    jwtModule.jwtVerify(token)\n    .then(result => {\n\n        return userDataModule.getUserID(result._id)\n\n    })\n    .then(result => {\n\n        if(result.length === 1){\n\n            jwt_userID = result[0].UserID\n            return groupModule.createGroup(req.params.groupName, result[0].UserID)\n\n        }else{\n\n            var jsonpackage = {}\n            jsonpackage[\"messageName\"] = \"createGroup\"\n            jsonpackage[\"data\"] = \"you are not in the database\"\n            res.send(JSON.stringify(jsonpackage))\n            return Promise.reject(0)\n\n        } \n\n    })\n    .then(result => {\n\n        return groupModule.getCertainGroupID(req.params.groupName, jwt_userID)\n    \n    })\n    .then(result => {\n\n        return groupModule.addMember(result[0].GroupID, jwt_userID)\n\n    })\n    .then(result => {\n\n        var jsonpackage = {}\n        jsonpackage[\"messageName\"] = \"createGroup\"\n        jsonpackage[\"data\"] = \"success\"\n        res.send(JSON.stringify(jsonpackage))\n\n    })\n    .catch(err => {\n\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\n\n    })\n\n}\n\nconst deleteGroup = (req, res) =>{\n\n\tconst token = req.cookies.token;\n\n    jwtModule.jwtVerify(token)\n    .then(result => {\n\n        return userDataModule.getUserID(result._id)\n\n    })\n    .then(result => {\n\n        if(result.length === 1){\n            \n            return groupModule.deleteGroup(req.params.groupID)\n\n        }else{\n\n            var jsonpackage = {}\n            jsonpackage[\"messageName\"] = \"deleteGroup\"\n            jsonpackage[\"data\"] = \"you are not in the database\"\n            res.send(JSON.stringify(jsonpackage))\n            return Promise.reject(0)\n\n        } \n\n    })\n    .then(result => {\n\n        var jsonpackage = {}\n        jsonpackage[\"messageName\"] = \"deleteGroup\"\n        jsonpackage[\"data\"] = \"success\"\n        res.send(JSON.stringify(jsonpackage))\n\n    })\n    .catch(err => {\n\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\n\n    })\n\n}\n\n\nexport default {\n    cresteGroup,\n    deleteGroup\n}","import mysql from './mysql.module'\r\nimport userDataModule from './userData.module'\r\nimport groupModule from './group.module'\r\n\r\n\r\n\r\nconst getFriendInvite = (toUserID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT Account.UserAccount ,Account.UserID \" +\r\n                    \"FROM Account \" +\r\n\r\n                    \"INNER JOIN FriendInvite \" +\r\n                    \"ON FriendInvite.FromUserID = Account.UserID \" +\r\n\r\n                    \"WHERE FriendInvite.ToUserID =\" +\r\n                    toUserID \r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n\r\n}\r\n\r\nconst deleteFriendInvite = (toUserID, fromUserID)=>{\r\n    \r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"DELETE FROM FriendInvite \" + \r\n        \"WHERE ToUserID = \" + toUserID + \" AND \" +\r\n        \"FromUserID = \" + fromUserID \r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n    \r\n}\r\n\r\nconst postFriendInvite = (toUserID, fromUserID)=>{\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        userDataModule.getCertainFriend(toUserID, fromUserID).then(result => {\r\n\r\n            if(result.length === 0){\r\n\r\n                return getCertainFriendInvite(toUserID, fromUserID)\r\n\r\n            }else{\r\n\r\n                reject(\"already friend\")\r\n                return Promise.reject(0)\r\n\r\n            }\r\n\r\n        })\r\n        .then(result => {\r\n\r\n            if (result.length === 0) {\r\n\r\n                var sqlCommand = \"INSERT INTO FriendInvite(ToUserID, FromUserID) VALUES('\" +\r\n                    toUserID + \"','\" +\r\n                    fromUserID + \"') \"\r\n\r\n                return mysql.mysqlCommand(sqlCommand)\r\n\r\n            }else{\r\n\r\n                reject(\"already invite\")\r\n                return Promise.reject(0)\r\n            }\r\n\r\n        })\r\n        .then(result => {\r\n\r\n            resolve(result)\r\n\r\n        })\r\n        .catch(err => {\r\n\r\n            if(err !== 0){\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            }\r\n\r\n        })\r\n\r\n    })\r\n    \r\n}\r\n\r\nconst getCertainFriendInvite = (toUserID, fromUserID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT FriendInviteID FROM FriendInvite \" +\r\n            \"WHERE\" +\r\n            \" ToUserID = \" + toUserID + \" AND\" +\r\n            \" FromUserID = \" + fromUserID + \" OR(\" +\r\n            \" ToUserID = \" + fromUserID + \" AND\" +\r\n            \" FromUserID = \" + toUserID + \")\"\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n                resolve(result)\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getGroupInvite = (userID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        var sqlCommand = \"SELECT GroupList.GroupName, GroupList.GroupID \" +\r\n            \"FROM GroupList \" +\r\n\r\n            \"INNER JOIN GroupInvite \" +\r\n            \"ON GroupInvite.GroupID = GroupList.GroupID \" +\r\n\r\n            \"WHERE GroupInvite.UserID = \" +\r\n            userID \r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n\r\n}\r\n\r\nconst deleteGroupInvite = (userID, groupID)=>{\r\n    \r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"DELETE FROM GroupInvite \" + \r\n        \"WHERE UserID = \" + userID + \" AND \" +\r\n        \"GroupID = \" + groupID \r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n    \r\n}\r\n\r\nconst postGroupInvite = (userID, groupID)=>{\r\n    \r\n    return new Promise((resolve, reject) => {\r\n\r\n        groupModule.getCertainMember(userID, groupID).then(result => {\r\n\r\n            if (result.length === 0) {\r\n\r\n                return getCertainGroupInvite(userID, groupID)\r\n\r\n            } else {\r\n\r\n                reject(\"already member\")\r\n                return Promise.reject(0)\r\n\r\n            }\r\n\r\n        })\r\n        .then(result => {\r\n\r\n            if (result.length === 0) {\r\n\r\n                var sqlCommand = \"INSERT INTO GroupInvite(UserID, GroupID) VALUES('\" +\r\n                    userID + \"','\" +\r\n                    groupID + \"') \"\r\n\r\n                return mysql.mysqlCommand(sqlCommand)\r\n\r\n            } else {\r\n\r\n                reject(\"already invite\")\r\n                return Promise.reject(0)\r\n            }\r\n\r\n        })\r\n        .then(result => {\r\n\r\n            resolve(result)\r\n\r\n        })\r\n        .catch(err => {\r\n\r\n            if (err !== 0) {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            }\r\n\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nconst getCertainGroupInvite = (userID, groupID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"SELECT GroupInviteID FROM GroupInvite \" +\r\n            \"WHERE\" +\r\n            \" UserID = \" + userID + \" AND\" +\r\n            \" GroupID = \" + groupID \r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n                resolve(result)\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n\r\n    })\r\n\r\n}\r\nexport default{\r\n    getFriendInvite,\r\n    deleteFriendInvite,\r\n    postFriendInvite,\r\n    getCertainFriendInvite,\r\n\r\n\r\n    getGroupInvite,\r\n    deleteGroupInvite,\r\n    postGroupInvite,\r\n    getCertainGroupInvite\r\n}","import jwtModule from '../modules/jwt.module'\r\nimport inviteModule from '../modules/invite.module'\r\nimport userDataModule from '../modules/userData.module'\r\nimport groupModule from '../modules/group.module'\r\n\r\n\r\nconst getFriendInvite = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n    .then(result => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        if(result.length === 1){\r\n            \r\n            return inviteModule.getFriendInvite(result[0].UserID)\r\n\r\n        }else{\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"getFriendInvite\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(0)\r\n\r\n        } \r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"getFriendInvite\"\r\n        jsonpackage[\"data\"] = result\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n\r\n    })\r\n\r\n}\r\n\r\nconst deleteFriendInvite = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n    .then(result => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        if(result.length === 1){\r\n\r\n            return inviteModule.deleteFriendInvite(result[0].UserID, req.params.userID)\r\n\r\n        }else{\r\n\r\n            jsonpackage[\"messageName\"] = \"deleteFriendInvite\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise,reject(0)\r\n\r\n        }\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"deleteFriendInvite\"\r\n        jsonpackage[\"data\"] = \"success\"\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n        \r\n    })\r\n    .catch((err) => {\r\n\r\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n\r\n    })\r\n\r\n}\r\n\r\nconst postFriendInvite = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n    .then((jwtVerify_result) => {\r\n\r\n        return Promise.all([\r\n                    userDataModule.getUserID(jwtVerify_result._id),\r\n                    userDataModule.getUserID(req.params.userName)\r\n                ])\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        if(result[0].length === 1 && result[1].length === 1){\r\n\r\n            return inviteModule.postFriendInvite(result[1][0].UserID, result[0][0].UserID)\r\n\r\n        }else{\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"postFriendInvite\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise,reject(0)\r\n\r\n        }\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"postFriendInvite\"\r\n        jsonpackage[\"data\"] = \"success\"\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n        \r\n        if (err === \"already friend\" || err === \"already invite\"){\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"postFriendInvite\"\r\n            jsonpackage[\"data\"] = err\r\n            res.send(JSON.stringify(jsonpackage))\r\n        }else{\r\n            res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n        }\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst getGroupInvite = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n    .then(result => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        if(result.length === 1){\r\n\r\n            return inviteModule.getGroupInvite(result[0].UserID)\r\n\r\n        }else{\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"getGroupInvite\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise,reject(0)\r\n\r\n        }\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"getGroupInvite\"\r\n        jsonpackage[\"data\"] = result\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch((err) => {\r\n\r\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n\r\n    })\r\n\r\n}\r\n\r\nconst deleteGroupInvite = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n    .then(result => {\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        if(result.length === 1){\r\n\r\n            return inviteModule.deleteGroupInvite(result[0].UserID, req.params.groupID)\r\n\r\n        }else{\r\n\r\n            jsonpackage[\"messageName\"] = \"deleteGroupInvite\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise,reject(0)\r\n\r\n        }   \r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"deleteGroupInvite\"\r\n        jsonpackage[\"data\"] = \"success\"\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch((err) => {\r\n\r\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n\r\n\r\n    })\r\n\r\n}\r\n\r\nconst postGroupInvite = (req, res) => {\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n    .then((jwtVerify_result) => {\r\n\r\n        return Promise.all([\r\n                    userDataModule.getUserID(jwtVerify_result._id),\r\n                    userDataModule.getUserID(req.params.userName)\r\n                ])\r\n\r\n    })\r\n    .then(result => {\r\n        \r\n        if(result[0].length === 1 && result[1].length === 1){\r\n            \r\n            return inviteModule.postGroupInvite(result[1][0].UserID, req.params.groupID)\r\n\r\n        }else{\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"postGroupInvite\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise,reject(0)\r\n\r\n        }\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"postGroupInvite\"\r\n        jsonpackage[\"data\"] = \"success\"\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n\r\n        if (err === \"already member\" || err === \"already invite\") {\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"postGroupInvite\"\r\n            jsonpackage[\"data\"] = err\r\n            res.send(JSON.stringify(jsonpackage))\r\n        } else {\r\n            res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n        }\r\n\r\n    })\r\n\r\n}\r\n\r\nexport default {\r\n    getFriendInvite,\r\n    deleteFriendInvite,\r\n    postFriendInvite,\r\n    getGroupInvite,\r\n    deleteGroupInvite,\r\n    postGroupInvite\r\n}","import mysql from './mysql.module'\r\n\r\nconst addFriend = (UserID1, UserID2) => {\r\n    return new Promise((resolve, reject) =>{\r\n\r\n        var sqlCommand = \"INSERT INTO FriendList(UserID1, UserID2) VALUES(\" +\r\n        UserID1 + \",\" +\r\n        UserID2 + \")\"\r\n\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n\r\n                resolve(result);\r\n\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\nconst deleteFriend = (UserID1, UserID2) => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"DELETE FROM FriendList \"+\r\n            \"WHERE \" +\r\n            \"(UserID1 = \" + UserID1 + \" AND UserID2 = \" + UserID2 + \") OR \" +\r\n            \"(UserID1 = \" + UserID2 + \" AND UserID2 = \" + UserID1 + \")\"\r\n\r\n\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n            .then(result => {\r\n\r\n                resolve(result);\r\n\r\n            })\r\n            .catch(err => {\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n            })\r\n    })\r\n\r\n}\r\nexport default{\r\n    addFriend,\r\n    deleteFriend\r\n}","import userDataModule from '../modules/userData.module'\r\nimport inviteModule from '../modules/invite.module'\r\nimport friendModule from '../modules/friend.module'\r\nimport groupModule from '../modules/group.module'\r\nimport jwtModule from '../modules/jwt.module'\r\n\r\nconst getGroup = (req, res) => {\r\n    const token = req.cookies.token;\r\n    jwtModule.jwtVerify(token)\r\n    .then(result => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result =>{\r\n\r\n        if(result.length === 1){\r\n\r\n            return userDataModule.getUserGroup(result[0].UserID)\r\n\r\n        }else{\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"getGroup\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise,reject(0)\r\n            \r\n        }\r\n\r\n    })\r\n    .then(result =>{\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"getGroup\"\r\n        jsonpackage[\"data\"] = result\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n\r\n    })\r\n\r\n}\r\n\r\nconst getFriend = (req, res) => {\r\n    const token = req.cookies.token;\r\n    jwtModule.jwtVerify(token)\r\n    .then(result => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n\r\n    .then(result => {\r\n\r\n        if(result.length === 1){\r\n\r\n            return userDataModule.getUserFriend(result[0].UserID)\r\n\r\n        }else{\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"getFriend\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise,reject(0)\r\n            \r\n        }\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"getFriend\"\r\n        jsonpackage[\"data\"] = result\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst addGroup = (req, res) => {\r\n    const token = req.cookies.token;\r\n    var userID_JWT = 0;\r\n    jwtModule.jwtVerify(token)\r\n    .then((result) => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n        if (result.length === 1) {\r\n\r\n            userID_JWT = result[0].UserID\r\n            \r\n            return groupModule.getCertainMember(userID_JWT, req.params.groupID)\r\n\r\n        } else {\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"addGroup\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(1)\r\n\r\n        }\r\n\r\n    })\r\n    .then(result => {\r\n        if (result.length === 0) {\r\n\r\n            return inviteModule.getCertainGroupInvite(userID_JWT, req.params.groupID)\r\n\r\n        } else {\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"addGroup\"\r\n            jsonpackage[\"data\"] = \"already member\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(0)\r\n        }\r\n    })\r\n    .then(result => {\r\n\r\n        if (result.length === 1) {\r\n\r\n            return groupModule.addMember(req.params.groupID, userID_JWT)\r\n\r\n        } else {\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"addGroup\"\r\n            jsonpackage[\"data\"] = \"not invited\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(0)\r\n        }\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        return inviteModule.deleteGroupInvite(userID_JWT, req.params.groupID)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"addGroup\"\r\n        jsonpackage[\"data\"] = \"success\"\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch(err => {\r\n        if (err !== 0) {\r\n            res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n        }\r\n    })\r\n}\r\n\r\nconst deleteGroup = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n\r\n    .then(result => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        if (result.length === 1) {\r\n\r\n            return groupModule.deleteMember(req.params.groupID, result[0].UserID)\r\n\r\n        } else {\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"deleteMember\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(1)\r\n\r\n        }\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"deleteMember\"\r\n        jsonpackage[\"data\"] = \"success\"\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch((err) => {\r\n        if (err !== 0) {\r\n            res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n        }\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst addFriend = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n    var userID_JWT = 0;\r\n    jwtModule.jwtVerify(token)\r\n    .then((result) => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n        if(result.length === 1){\r\n            userID_JWT = result[0].UserID\r\n            return userDataModule.getCertainFriend(userID_JWT, req.params.userID)\r\n\r\n        } else {\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"addFriend\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(1)\r\n\r\n        }\r\n\r\n    })\r\n    .then(result => {\r\n        if(result.length === 0){\r\n\r\n            return inviteModule.getCertainFriendInvite(userID_JWT, req.params.userID)\r\n\r\n        }else{\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"addFriend\"\r\n            jsonpackage[\"data\"] = \"already friend\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(0)\r\n        }\r\n    })\r\n    .then(result => {\r\n\r\n        if (result.length === 1) {\r\n\r\n            return friendModule.addFriend(userID_JWT, req.params.userID)\r\n\r\n        } else {\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"addFriend\"\r\n            jsonpackage[\"data\"] = \"not invited\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(0)\r\n        }\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        return inviteModule.deleteFriendInvite(userID_JWT, req.params.userID)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"addFriend\"\r\n        jsonpackage[\"data\"] = \"success\"\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch(err => {\r\n        if(err !== 0){\r\n            res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n        }\r\n    })\r\n\r\n}\r\n\r\nconst deleteFriend = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n    \r\n    .then(result => {\r\n\r\n        return userDataModule.getUserID(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        if (result.length === 1) {\r\n\r\n            return friendModule.deleteFriend(result[0].UserID, req.params.userID)\r\n\r\n        } else {\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"deleteFriend\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise.reject(1)\r\n\r\n        }\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        jsonpackage[\"messageName\"] = \"deleteFriend\"\r\n        jsonpackage[\"data\"] = \"success\"\r\n        res.send(JSON.stringify(jsonpackage))\r\n\r\n    })\r\n    .catch((err) => {\r\n        if(err !== 0){\r\n            res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n        }\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const getID = (req, res) => {\r\n\r\n//     const token = req.cookies.token;\r\n\r\n//     jwtModule.jwtVerify(token)\r\n//     .then((result) => {\r\n\r\n//         return userDataModule.getUserID(result._id)\r\n\r\n//     })\r\n//     .then(result => {\r\n\r\n//          var jsonpackage = {}\r\n\r\n//          if(result.length === 1){\r\n\r\n//             jsonpackage[\"messageName\"] = \"getUserID\"\r\n//             jsonpackage[\"data\"] = result\r\n//             res.send(JSON.stringify(jsonpackage))\r\n\r\n//         }else{\r\n\r\n//             jsonpackage[\"messageName\"] = \"getUserID\"\r\n//             jsonpackage[\"data\"] = \"you are not in the database\"\r\n//             res.send(JSON.stringify(jsonpackage))\r\n//             return Promise,reject(0)\r\n\r\n//         }\r\n\r\n//     })\r\n//     .catch((err) => {\r\n\r\n//         res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n\r\n//     })\r\n\r\n// }\r\n\r\n// const getName = (req, res) => {\r\n\r\n//     const token = req.cookies.token;\r\n\r\n//     jwtModule.jwtVerify(token)\r\n//     .then((result) => {\r\n\r\n\r\n//         var jsonpackage = {}\r\n//         jsonpackage[\"messageName\"] = \"getUserAccount\"\r\n//         jsonpackage[\"data\"] = result._id\r\n//         res.send(JSON.stringify(jsonpackage))\r\n\r\n//     }).catch((err) => {\r\n\r\n//         res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n//     })\r\n\r\n// }\r\n\r\nconst getUserData = (req, res) => {\r\n\r\n    const token = req.cookies.token;\r\n\r\n    jwtModule.jwtVerify(token)\r\n    .then((result) => {\r\n\r\n        return userDataModule.getUserData(result._id)\r\n\r\n    })\r\n    .then(result => {\r\n\r\n        var jsonpackage = {}\r\n        \r\n        if(result.length === 1){\r\n\r\n            jsonpackage[\"messageName\"] = \"userData\"\r\n            jsonpackage[\"data\"] = result\r\n            res.send(JSON.stringify(jsonpackage))\r\n\r\n        }else{\r\n\r\n            jsonpackage[\"messageName\"] = \"userData\"\r\n            jsonpackage[\"data\"] = \"you are not in the database\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n            return Promise,reject(0)\r\n\r\n        }\r\n        \r\n    })\r\n    .catch((err) => {\r\n\r\n        res.redirect('https://127.0.0.1:3000/OnlineText/login');\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    getGroup,\r\n    getFriend,\r\n    addGroup,\r\n    deleteGroup,\r\n    addFriend,\r\n    deleteFriend,\r\n    // getID,\r\n    // getName,\r\n    getUserData\r\n}","import mysql from './mysql.module'\r\n\r\nconst checkAccount = (userAccount, userPassword) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"Select UserPassword From Account Where UserAccount = '\" + userAccount + \"'\"\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n\r\n            if (result.length == 0) {\r\n\r\n                resolve(\"account not found\")\r\n\r\n            } else if (result[0].UserPassword === userPassword) {\r\n\r\n                resolve(\"success\")\r\n\r\n            } else {\r\n\r\n                resolve(\"password incorrect\")\r\n\r\n            }\r\n\r\n        }).catch(err => {\r\n            if (err) {\r\n\r\n                console.error('SQL error:', err)\r\n                reject(err)\r\n\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport default {\r\n    checkAccount\r\n}","import loginModule from '../modules/login.module'\r\nimport jwtModule from '../modules/jwt.module'\r\n\r\nconst login = (req, res) => {\r\n\r\n\r\n    loginModule.checkAccount(req.params.userAccount, req.params.userPassword)\r\n        .then(result => {\r\n            if (result === \"success\") {\r\n\r\n                return jwtModule.jwtSetCookie(req.params.userAccount, res)\r\n\r\n            } else {\r\n\r\n                var jsonpackage = {}\r\n                jsonpackage[\"messageName\"] = \"login\"\r\n                jsonpackage[\"data\"] = result\r\n                res.send(JSON.stringify(jsonpackage))\r\n                return Promise.reject(0)\r\n\r\n            }\r\n        })\r\n        .then(result => {\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"login\"\r\n            jsonpackage[\"data\"] = \"success\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n\r\n        })\r\n        .catch((err) => {\r\n\r\n            if (err !== 0) {\r\n\r\n                var jsonpackage = {}\r\n                jsonpackage[\"messageName\"] = \"error\"\r\n                jsonpackage[\"data\"] = err\r\n                res.send(JSON.stringify(jsonpackage))\r\n\r\n            }\r\n        })\r\n\r\n}\r\nexport default {\r\n    login\r\n}","import mysql from './mysql.module'\r\n\r\nconst createAccount = (userAccount, userPassword) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var sqlCommand = \"INSERT INTO Account(UserAccount, UserPassword) VALUES('\" +\r\n            userAccount + \"','\" +\r\n            userPassword + \"')\"\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            \r\n            resolve(result);\r\n\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n}\r\n\r\nexport default {\r\n    createAccount\r\n}","import registerModule from '../modules/register.module'\r\nimport loginModule from '../modules/login.module'\r\n\r\nconst register = (req, res) => {\r\n    loginModule.checkAccount(req.params.userAccount, req.params.userPassword)\r\n        .then(result => {\r\n            if (result === \"account not found\") {\r\n\r\n                return registerModule.createAccount(req.params.userAccount, req.params.userPassword)\r\n\r\n            } else if (result === \"success\" || result === \"password incorrect\") {\r\n\r\n                var jsonpackage = {}\r\n                jsonpackage[\"messageName\"] = \"register\"\r\n                jsonpackage[\"data\"] = \"account exist\"\r\n                res.send(JSON.stringify(jsonpackage))\r\n                return Promise.reject(0)\r\n            }\r\n\r\n        })\r\n        .then(result => {\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"register\"\r\n            jsonpackage[\"data\"] = \"success\"\r\n            res.send(JSON.stringify(jsonpackage))\r\n\r\n        })\r\n        .catch((err) => {\r\n\r\n            if (err !== 0) {\r\n\r\n                var jsonpackage = {}\r\n                jsonpackage[\"messageName\"] = \"error\"\r\n                jsonpackage[\"data\"] = err\r\n                res.send(JSON.stringify(jsonpackage))\r\n\r\n            }\r\n\r\n        })\r\n\r\n}\r\n\r\nexport default {\r\n    register\r\n}","import mysql from 'mysql'\r\nimport config from '../../config/config'\r\n\r\nconst connectionPool = mysql.createPool({\r\n    connection: 10,\r\n    host: config.mysqlHost,\r\n    user: config.mysqlUserName,\r\n    password: config.mysqlPass,\r\n    database: config.mysqlDatabase\r\n})\r\n\r\nconst uploadImage = (imgName, img) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        connectionPool.getConnection((connectionError, connection) => {\r\n\r\n            if (connectionError) {\r\n\r\n                reject(connectionError)\r\n\r\n            } else {\r\n                // connection.query(\"INSERT INTO image SET imgName = 123, img = ?;\", img, function (err, result) {\r\n\r\n                //     if (err) {\r\n\r\n                //         console.error('SQL error:', err)\r\n                //         reject(err)\r\n\r\n                //     } else {\r\n\r\n                //         resolve(result);\r\n                //     }\r\n\r\n                // })\r\n\r\n                connection.query(\"SELECT img FROM image WHERE imgName = 123\", function (err, result) {\r\n\r\n                    if (err) {\r\n\r\n                        console.error('SQL error:', err)\r\n                        reject(err)\r\n\r\n                    } else {\r\n\r\n                        resolve(result);\r\n                    }\r\n\r\n                })\r\n\r\n                connection.release()\r\n\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n}\r\n\r\nexport default {\r\n    uploadImage\r\n}","import mysql from './mysql.module'\r\n\r\nconst saveGroupMessage = (groupID, fromUserID, message) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var today = new Date();\r\n        var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        var dateTime = date + ' ' + time;\r\n\r\n        var sqlCommand = \"INSERT INTO GroupMessage(GroupID, FromUserID, Message, Time) VALUES('\" +\r\n            groupID + \"','\" +\r\n            fromUserID + \"','\" +\r\n            message  + \"','\" +\r\n            dateTime+ \"')\"\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n    \r\n    })\r\n}\r\n\r\nconst getGroupPreloadMessage = (groupID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        connectionPool.getConnection((connectionError, connection) => {\r\n            if (connectionError) {\r\n                reject(connectionError)\r\n            } else {\r\n                var sqlCommand = \"SELECT Account.UserAccount, GroupMessage.Message, GroupMessage.Time \" +\r\n                    \"FROM GroupMessage \" +\r\n\r\n                    \"INNER JOIN Account \" +\r\n                    \"ON Account.UserID = GroupMessage.FromUserID \" +\r\n\r\n                    \"WHERE GroupMessage.GroupID = \" +\r\n                    groupID +\r\n\r\n                    \" ORDER BY GroupMessage.MessageID \" +\r\n                    \"limit 50\";\r\n\r\n                connection.query(sqlCommand, function (err, result) {\r\n\r\n                    if (err) {\r\n\r\n                        console.error('SQL error:', err)\r\n                        reject(err)\r\n\r\n                    } else {\r\n                        resolve(result);\r\n\r\n                    }\r\n                })\r\n                connection.release()\r\n            }\r\n        })\r\n\r\n    })\r\n}\r\n\r\nconst saveFriendMessage = (friendID, fromUserID, message) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var today = new Date();\r\n        var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        var dateTime = date + ' ' + time;\r\n\r\n        var sqlCommand = \"INSERT INTO FriendMessage(FriendID, FromUserID, Message, Time) VALUES('\" +\r\n            friendID + \"','\" +\r\n            fromUserID + \"','\" +\r\n            message + \"','\" +\r\n            dateTime + \"')\"\r\n\r\n        mysql.mysqlCommand(sqlCommand)\r\n        .then(result => {\r\n            resolve(result)\r\n        })\r\n        .catch(err => {\r\n            console.error('SQL error:', err)\r\n            reject(err)\r\n        })\r\n\r\n    })\r\n}\r\n\r\nconst getFriendPreloadMessage = (friendID) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        connectionPool.getConnection((connectionError, connection) => {\r\n            if (connectionError) {\r\n                reject(connectionError)\r\n            } else {\r\n                var sqlCommand = \"SELECT Account.UserAccount, FriendMessage.Message, FriendMessage.Time \" +\r\n                    \"FROM FriendMessage \" +\r\n                    \"INNER JOIN Account  \" +\r\n                    \"ON FriendMessage.FromUserID = Account.UserID \" +\r\n                    \"WHERE FriendMessage.FriendID = \" +\r\n                    friendID +\r\n\r\n                    \" ORDER BY FriendMessage.MessageID \" +\r\n                    \"limit 50\";\r\n\r\n                connection.query(sqlCommand, function (err, result) {\r\n\r\n                    if (err) {\r\n\r\n                        console.error('SQL error:', err)\r\n                        reject(err)\r\n\r\n                    } else {\r\n                        resolve(result);\r\n\r\n                    }\r\n                })\r\n                connection.release()\r\n            }\r\n        })\r\n\r\n    })\r\n}\r\n\r\nexport default {\r\n    saveGroupMessage,\r\n    getGroupPreloadMessage,\r\n    saveFriendMessage,\r\n    getFriendPreloadMessage\r\n}","import messageModule from '../modules/message.module'\r\nimport groupModule from '../modules/group.module'\r\nimport redis from 'redis'\r\n\r\nconst getGroupMember = (groupID) => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        groupModule.getGroupMember(groupID)\r\n        .then(result => {\r\n\r\n            resolve(result)\r\n\r\n        }).catch(err => {\r\n\r\n            reject(err)\r\n\r\n        })\r\n    })\r\n\r\n}\r\n\r\nvar saveGroupMessage = (data) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        messageModule.saveGroupMessage(data.groupID, data.fromUserID, data.message)\r\n        .then(result => {\r\n\r\n            resolve(result)\r\n\r\n        }).catch(err => {\r\n\r\n            reject(err)\r\n\r\n        })\r\n\r\n    })\r\n}\r\n\r\nconst getOldGroupMessage = (req ,res) => {\r\n\r\n    const client = redis.createClient();\r\n    client.on('connect', () => {\r\n\r\n        console.log('Redis client connected');\r\n\r\n    });\r\n\r\n    client.LRANGE(req.params.groupID + \"_groupMessage\", 0, 50, (err, result) => {\r\n\r\n        if (result.length != 0) {\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"getOldGroupMessage\"\r\n\r\n            for (let x = 0; x < result.length; x++){\r\n\r\n                result[x] = JSON.parse(result[x])\r\n\r\n            }\r\n            jsonpackage[\"data\"] = result\r\n            client.expire(req.params.groupID + \"_groupMessage\", 1000)\r\n            res.send(JSON.stringify(jsonpackage))\r\n\r\n        } else {\r\n\r\n            messageModule.getGroupPreloadMessage(req.params.groupID)\r\n            .then(result => {\r\n\r\n                var jsonpackage = {}\r\n                jsonpackage[\"messageName\"] = \"getOldGroupMessage\"\r\n                jsonpackage[\"data\"] = result\r\n\r\n                for (var x = 0; x < jsonpackage.data.length; x++) {\r\n                    client.RPUSH(req.params.groupID + \"_groupMessage\", JSON.stringify(jsonpackage.data[x]));\r\n                }\r\n                client.expire(req.params.groupID + \"_groupMessage\", 1000)\r\n                res.send(JSON.stringify(jsonpackage))\r\n                    \r\n            }).catch((err) => {\r\n\r\n                reject(err)\r\n            })\r\n\r\n        }\r\n        \r\n        if (err) {\r\n            console.log(err);\r\n            throw err;\r\n        }\r\n\r\n    })\r\n\r\n\r\n}\r\n\r\nvar saveFriendMessage = (data) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        messageModule.saveGroupMessage(data.friendID, data.fromUserID, data.message)\r\n        .then(result => {\r\n\r\n            resolve(result)\r\n\r\n        }).catch(err => {\r\n\r\n            reject(err)\r\n\r\n        })\r\n\r\n    })\r\n}\r\n\r\nconst getOldFriendMessage = (req ,res) => {\r\n\r\n    const client = redis.createClient();\r\n    client.on('connect', () => {\r\n\r\n        console.log('Redis client connected');\r\n\r\n    });\r\n\r\n    client.LRANGE(res.params.friendID + \"_friendMessage\", 0, 50, (err, result) => {\r\n\r\n        if (result.length != 0) {\r\n\r\n            var jsonpackage = {}\r\n            jsonpackage[\"messageName\"] = \"getOldFriendMessage\"\r\n\r\n            for (let x = 0; x < result.length; x++){\r\n\r\n                result[x] = JSON.parse(result[x])\r\n\r\n            }\r\n            jsonpackage[\"data\"] = result\r\n            client.expire(friendID + \"_friendMessage\", 1000)\r\n            res.send(JSON.stringify(jsonpackage))\r\n\r\n        } else {\r\n\r\n            messageModule.getGroupPreloadMessage(res.params.friendID)\r\n            .then(result => {\r\n\r\n                var jsonpackage = {}\r\n                jsonpackage[\"messageName\"] = \"getOldGroupMessage\"\r\n                jsonpackage[\"data\"] = result\r\n\r\n                for (var x = 0; x < jsonpackage.data.length; x++) {\r\n                    client.RPUSH(res.params.friendID + \"_friendMessage\", JSON.stringify(jsonpackage.data[x]));\r\n                }\r\n                client.expire(res.params.friendID + \"_friendMessage\", 1000)\r\n                res.send(JSON.stringify(jsonpackage))\r\n                \r\n            }).catch((err) => {\r\n\r\n                reject(err)\r\n            })\r\n\r\n        }\r\n        \r\n        if (err) {\r\n            console.log(err);\r\n            throw err;\r\n        }\r\n\r\n    })\r\n\r\n}\r\n\r\nexport default {\r\n    getGroupMember,\r\n    saveGroupMessage,\r\n    getOldGroupMessage,\r\n\r\n    saveFriendMessage,\r\n    getOldFriendMessage\r\n}","import express from 'express'\r\nimport groupCtrl from '../controllers/group.controller'\r\nimport inviteCtrl from '../controllers/invite.controller'\r\nimport userDataCtrl from '../controllers/userData.controller'\r\nimport loginCtrl from '../controllers/login.controller'\r\nimport registerCtrl from '../controllers/register.controller'\r\nimport imgmodules from '../modules/image.module'\r\nimport message from '../controllers/message.controller'\r\nimport fs from 'fs'\r\n\r\n\r\nconst multer = require('multer')\r\n\r\nconst router = express.Router()\r\n\r\n// ===========================================            login and reagister             =============================================\r\nrouter.get('/login/:userAccount/:userPassword', function (req, res) {\r\n    loginCtrl.login(req, res)\r\n\r\n})\r\n\r\nrouter.post('/register/:userAccount/:userPassword', function (req, res) {\r\n\r\n    registerCtrl.register(req, res)\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n// ===========================================            user data              =============================================\r\nrouter.get('/userData', function (req, res) {\r\n\r\n\tuserDataCtrl.getUserData(req, res)\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n// ===========================================            group               =============================================\r\nrouter.post('/createGroup/:groupName', function (req, res) {\r\n\r\n\tgroupCtrl.cresteGroup(req, res)\r\n\r\n})\r\nrouter.delete('/deleteGroup/:groupID', function (req, res) {\r\n\r\n\tgroupCtrl.deleteGroup(req, res)\r\n\r\n})\r\nrouter.get('/group', function (req, res) {\r\n\r\n\tuserDataCtrl.getGroup(req, res)\r\n\r\n})\r\nrouter.post('/group/:groupID', function (req, res) {\r\n\r\n\tuserDataCtrl.addGroup(req, res)\r\n\r\n})\r\nrouter.delete('/group/:groupID', function (req, res) {\r\n\r\n\tuserDataCtrl.deleteGroup(req, res)\r\n\r\n})\r\nrouter.get('/groupInvite', function (req, res) {\r\n\r\n\tinviteCtrl.getGroupInvite(req, res)\r\n\r\n})\r\nrouter.post('/groupInvite/:userName/:groupID', function (req, res) {\r\n\r\n\tinviteCtrl.postGroupInvite(req, res)\r\n\r\n})\r\nrouter.delete('/groupInvite/:groupID', function (req, res) {\r\n\r\n\tinviteCtrl.deleteGroupInvite(req, res)\r\n\r\n})\r\n\r\n\r\n\r\n\r\n// ===========================================            friend               =============================================\r\nrouter.get('/friend', function (req, res) {\r\n\r\n\tuserDataCtrl.getFriend(req, res)\r\n\r\n})\r\nrouter.post('/friend/:userID', function (req, res) {\r\n\r\n\tuserDataCtrl.addFriend(req, res)\r\n\r\n})\r\nrouter.delete('/friend/:userID', function (req, res) {\r\n\r\n\tuserDataCtrl.deleteFriend(req, res)\r\n\r\n})\r\nrouter.get('/friendInvite', function (req, res) {\r\n\r\n\tinviteCtrl.getFriendInvite(req, res)\r\n\r\n})\r\nrouter.post('/friendInvite/:userName', function (req, res) {\r\n\r\n\tinviteCtrl.postFriendInvite(req, res)\r\n\r\n})\r\nrouter.delete('/friendInvite/:userID', function (req, res) {\r\n\r\n\tinviteCtrl.deleteFriendInvite(req, res)\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ===========================================            oldmessage               =============================================\r\nrouter.get('/oldMessage/:groupID', function (req, res) {\r\n\r\n\r\n\r\n})\r\nrouter.get('/friendOldMessage/:userID', function (req, res) {\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const upload = multer({\r\n//     storage: multer.memoryStorage(),\r\n//     limits: {\r\n//         fileSize: 2 * 1024 * 1024,  // 限制 2 MB\r\n//     },\r\n//     fileFilter(req, file, callback) {  // 限制檔案格式為 image\r\n//         if (!file.mimetype.match('image/jpeg')) {\r\n//             callback(new Error().message = '檔案格式錯誤');\r\n//         } else {\r\n//             callback(null, true);\r\n//         }\r\n//     }\r\n// });\r\n\r\n// router.post('/Image', upload.single('image'), async (req, res, next) => {\r\n//     imgmodules.uploadImage(req.file.originalname, req.file.buffer).then((getChatPreloadMessage_result) => {\r\n\r\n//         console.log(\"success\")\r\n\r\n//     }).catch((err) => {\r\n\r\n//         console.log(\"err\")\r\n//     })\r\n// });\r\n\r\n// router.get('/Image', function (req, res) {\r\n//     imgmodules.uploadImage(1, 1).then((getChatPreloadMessage_result) => {\r\n//         res.send(getChatPreloadMessage_result[2].img)\r\n\r\n//     }).catch((err) => {\r\n\r\n//         console.log(err)\r\n//     })\r\n//     // res.sendFile('/OnlineText/public/images/login_background.png');\r\n// });\r\n\r\nexport default router","import express from 'express'\r\nconst router = express.Router()\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.render('ErrorPage')\r\n})\r\n\r\nexport default router","import express from 'express'\r\nimport login from './login.route'\r\nimport register from './register.route'\r\nimport mainPage from './mainPage.route'\r\nimport verification from './verification.route'\r\nimport file from './file.route'\r\nimport error from './error.route'\r\n\r\nconst router = express.Router()\r\n\r\nrouter.use('/login', login)\r\nrouter.use('/register', register)\r\nrouter.use('/mainPage', mainPage)\r\nrouter.use('/verification', verification)\r\nrouter.use('/file', file)\r\nrouter.use('/error', error)\r\n\r\nexport default router ","/* express.js */\r\nimport express from 'express';\r\nimport config from './config';\r\nimport index from '../server/routes/index.route';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors'\r\nimport morgan from 'morgan'\r\nimport path from 'path'\r\nimport cookieParser from 'cookie-parser'\r\n\r\nconst app = express()\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\napp.use(cookieParser())\r\napp.use(cors())\r\napp.use(morgan('dev'))\r\n\r\napp.set('views', './views')\r\napp.set(\"view engine\", \"jade\")\r\n\r\n/* GET home page. */\r\napp.upload = function (req, res) {\r\n    console.log(req.body)\r\n};\r\n\r\n// app.get('/', (req, res) => {\r\n//     res.render('welcome')\r\n// })\r\napp.use('/OnlineText', index)\r\n\r\napp.use(express.static(path.join('C:/OnlineText/', 'public')));\r\n\r\napp.use(function (req, res) {\r\n    res.status(404).render('404Page')\r\n})\r\n\r\nexport default app","import redis from 'redis'\r\nimport fs from 'fs'\r\nimport https from 'https'\r\nimport config from './config/config'\r\nimport app from './config/express'\r\nimport jwtModule from './server/modules/jwt.module'\r\nimport messageCtrl from './server/controllers/message.controller'\r\nimport userDataMoudule from './server/modules/userData.module'\r\nimport SocketServer from 'ws'\r\n\r\n\r\nvar clients = []\r\nconst SERVER_CONFIG = {\r\n    key: fs.readFileSync('key.pem'),\r\n    cert: fs.readFileSync('cert.pem')\r\n};\r\n\r\nconst server = https.createServer(SERVER_CONFIG, app)\r\nconst wss = new SocketServer.Server({\r\n    server: server\r\n    ,\r\n    verifyClient: function (info, cb) {\r\n        var token = info.req.headers.cookie\r\n        var list = {}\r\n\r\n        if (!token) {\r\n            cb(false, 401, 'Unauthorized')\r\n        }\r\n        else {\r\n            token.split(';').forEach(function (cookie) {\r\n                var parts = cookie.split('=');\r\n                list[parts.shift().trim()] = decodeURI(parts.join('='));\r\n            })\r\n            jwtModule.jwtVerify(list.token).then((jwtVerify_result) => {\r\n\r\n                cb(true);\r\n\r\n            }).catch((err) => {\r\n\r\n                console.log(err)\r\n                cb(false, 401, 'Unauthorized')\r\n\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n})\r\n\r\nwss.on('connection', ws => {\r\n\r\n    clients.push(ws);\r\n\r\n    ws.on('message', data => {\r\n\r\n        var jsonData = JSON.parse(data)\r\n        switch (jsonData.messageName) {\r\n\r\n\r\n            case \"userAccount\":\r\n                userDataMoudule.getUserID(jsonData.data)\r\n                .then(result => {\r\n\r\n                    ws.account = jsonData.data\r\n                    ws.id = result.UserID\r\n\r\n                }).catch(err => {\r\n                    \r\n                    res.send(err)\r\n                \r\n                })\r\n\r\n                break\r\n\r\n            case \"groupMessage\":\r\n\r\n                jsonData.data.fromUserID = ws.id\r\n                jsonData.data.fromUserAccount = ws.account\r\n                messageCtrl.saveMessage(jsonData.data)\r\n                .then(saveMessage_result => {\r\n\r\n                    return messageCtrl.getMember(jsonData.data.groupName)\r\n\r\n                })\r\n                .then(result => {\r\n\r\n                    const client = redis.createClient()\r\n                    client.on('connect', () => {\r\n\r\n                        console.log('Redis client connected')\r\n\r\n                    })\r\n                    let jsonPackage = {}\r\n                    jsonPackage[\"UserAccount\"] = jsonData.data.fromUserAccount\r\n                    jsonPackage[\"Message\"] = jsonData.data.message\r\n\r\n\r\n                    client.RPUSH(jsonData.data.groupID + \"_groupMessage\", JSON.stringify(jsonPackage));\r\n                    client.expire(jsonData.data.groupID + \"_groupMessage\", 1000);\r\n                    for (var x = 0; x < clients.length; x++) {\r\n\r\n                        if (result.some(item => item.UserID === clients[x].id)) {\r\n\r\n                            clients[x].send(JSON.stringify(jsonData))\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n                break\r\n\r\n            // case \"friendMessage\":\r\n\r\n            //     jsonData.data.fromUserID = ws.id\r\n            //     jsonData.data.fromUserAccount = ws.account\r\n            //     messageCtrl.saveMessage(jsonData.data)\r\n            //     .then(saveMessage_result => {\r\n\r\n            //         return messageCtrl.getMember(jsonData.data.groupName)\r\n\r\n            //     })\r\n            //     .then(result => {\r\n\r\n            //         const client = redis.createClient()\r\n            //         client.on('connect', () => {\r\n\r\n            //             console.log('Redis client connected')\r\n\r\n            //         })\r\n            //         let jsonPackage = {}\r\n            //         jsonPackage[\"UserAccount\"] = jsonData.data.fromUserAccount\r\n            //         jsonPackage[\"Message\"] = jsonData.data.message\r\n\r\n\r\n            //         client.RPUSH(jsonData.data.friendID + \"_friendMessage\", JSON.stringify(jsonPackage));\r\n            //         client.expire(jsonData.data.friendID + \"_friendMessage\", 1000);\r\n            //         for (var x = 0; x < clients.length; x++) {\r\n\r\n            //             if (getMember_result.some(item => item.UserID === clients[x].id)) {\r\n\r\n            //                 clients[x].send(JSON.stringify(jsonData))\r\n\r\n            //             }\r\n            //         }\r\n\r\n            //     })\r\n            //     .catch((err) => {\r\n            //         console.log(err)\r\n            //     })\r\n            //     break\r\n\r\n            default:\r\n                break\r\n\r\n        }\r\n\r\n    })\r\n\r\n    ws.on('close', () => {\r\n\r\n        console.log('Close connected')\r\n\r\n        const index = clients.indexOf(ws);\r\n        if (index > -1) {\r\n            clients.splice(index, 1);\r\n        }\r\n\r\n    })\r\n\r\n})\r\n\r\nserver.listen(config.port, () => {\r\n    console.log(`server started on port https://127.0.\r\n    0.1:${config.port} (${config.env})`)\r\n})\r\n\r\nexport default\r\n    { app, wss };"],"sourceRoot":""}